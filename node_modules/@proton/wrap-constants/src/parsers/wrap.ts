import * as z from 'zod'
import { ExtendedAssetParser } from './base'

export enum Status {
    PENDING    = 'pending',
    SUCCESS    = 'success',
    FAIL       = 'fail',
    PROCESSING = 'processing'
}

export const wrapStartParser = z.object({
    balance        : ExtendedAssetParser,
    id             : z.string(),
    txid           : z.string(),
    chain          : z.string(),
    deposit_address: z.string(),
    confirmations  : z.number()
})

export type WrapStart = z.infer<typeof wrapStartParser>

export const wrapSetConfParser = z.object({
    wrap_hash    : z.string(),
    confirmations: z.number()
})
export type WrapSetConf = z.infer<typeof wrapSetConfParser>

export const wrapParser = z.object({
    index          : z.number(),
    proton_account : z.string(),
    balance        : ExtendedAssetParser,
    id             : z.string(),
    txid           : z.string(),
    chain          : z.string(),
    deposit_address: z.string(),
    status         : z.nativeEnum(Status),
    finish_txid    : z.string(),
    wrap_hash      : z.string(),
    confirmations  : z.number(),
})
export type Wrap = z.infer<typeof wrapParser>