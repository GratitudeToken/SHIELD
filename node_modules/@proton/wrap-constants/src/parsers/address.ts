import * as z from 'zod';
import { accountParser } from './base'
import { generateAuthParser } from './auth'

export const addressParser = z.object({
    index       : z.number(),
    account     : accountParser,
    chain       : z.string(),
    address     : z.string(),
    address_hash: z.string(),
})
export type Address = z.infer<typeof addressParser>

export const generateAddressBodyParser = z.object({
    coin: z.string(),
    wallet: z.string(),
}).merge(generateAuthParser)
export type GenerateAddressBody = z.infer<typeof generateAddressBodyParser>

export const generateAddressResponse = z.object({
    id     : z.string(),            // "2448834505708930950",
    address: z.string(),            // "0x617C03C1E2Bf81C062A4CEfbE312c070E1d86d18",
    coin   : z.string(),            // "ETH",
    wallet : z.string(),            // "ETH",
    memo   : z.string().optional()
})
export type GenerateAddressResponse = z.infer<typeof generateAddressResponse>
