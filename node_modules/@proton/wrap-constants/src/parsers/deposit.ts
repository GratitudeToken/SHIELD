import * as z from 'zod'

export enum Type {
    RECEIVE = 'receive',
    SEND    = 'send'
}

export const depositBodyParser = z.object({
    id        : z.string(), // "0x000010203121388fac991"
    type      : z.nativeEnum(Type), // "receive" or "send"
    hash      : z.string(), // "0x000010203121388fac991"
    coin      : z.string(), // "ETH" or "XPR"
    wallet    : z.string(), // "ETH-ROPSTEN" or "XPR-MAINNET"
    network   : z.string().optional(), // "erc29"
})
export type DepositBody = z.infer<typeof depositBodyParser>

export const transactionParser = z.object({
    id            : z.string(), // "2629304740076324677"
    wallet        : z.string(), // "ETH"
    value         : z.number(), // 10000000000000000
    valueString   : z.string(), // "10000000000000000"
    address       : z.string(), // "0x0000"
    type          : z.nativeEnum(Type), // "receive" or "send"
    state         : z.string(), // "confirmed"
    confirmations : z.number(), // 1
    hash          : z.string(), // "b4781422be95fee8fbbf720e3e0fa9705ae834474ef25f5724cdd0f5d23211ed"
    blockHash     : z.string().optional().nullable(), // "000000000000000000089b270eb99f75107d6a9cde37ec944cb80a2998df7b43"
    blockHeight   : z.number().optional().nullable(), // 643159
})
export type Transaction = z.infer<typeof transactionParser>