import { BigNumber as BN } from 'bignumber.js';
/**
 * XPR<>XUSDT (XPR -> XUSDT)
 *
 *                     pool1 * pool2
 *  term =  pool2  -  --------------
 *                     pool1 + swap
 *
 *  result = term - (term * fee)
 */
export declare const compute_transfer: (pool1: BN.Instance, pool2: BN.Instance, swap: BN.Instance, exchange_fee: number, precision: number) => BN;
export declare const compute_transfer_curve: (reserve_in: number, reserve_out: number, amount_in: number, exchange_fee: number, precision: number, amplifier: number) => BN;
export declare const compute_liquidity: (amount_lt: BN.Instance, pool: BN.Instance, lt_supply: BN.Instance, precision: number) => number;
export declare const isInputInvalid: (data: string, value: string | number, pool: {
    xtokenPrecision: number;
}) => boolean;
export declare const applyDiscountToFee: (fee: number, staked: number) => number;
