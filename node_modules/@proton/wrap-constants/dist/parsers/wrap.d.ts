import * as z from 'zod';
export declare enum Status {
    PENDING = "pending",
    SUCCESS = "success",
    FAIL = "fail",
    PROCESSING = "processing"
}
export declare const wrapStartParser: z.ZodObject<{
    balance: z.ZodObject<{
        quantity: z.ZodString;
        contract: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        quantity: string;
        contract: string;
    }, {
        quantity: string;
        contract: string;
    }>;
    id: z.ZodString;
    txid: z.ZodString;
    chain: z.ZodString;
    deposit_address: z.ZodString;
    confirmations: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    balance: {
        quantity: string;
        contract: string;
    };
    id: string;
    txid: string;
    chain: string;
    deposit_address: string;
    confirmations: number;
}, {
    balance: {
        quantity: string;
        contract: string;
    };
    id: string;
    txid: string;
    chain: string;
    deposit_address: string;
    confirmations: number;
}>;
export declare type WrapStart = z.infer<typeof wrapStartParser>;
export declare const wrapSetConfParser: z.ZodObject<{
    wrap_hash: z.ZodString;
    confirmations: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    confirmations: number;
    wrap_hash: string;
}, {
    confirmations: number;
    wrap_hash: string;
}>;
export declare type WrapSetConf = z.infer<typeof wrapSetConfParser>;
export declare const wrapParser: z.ZodObject<{
    index: z.ZodNumber;
    proton_account: z.ZodString;
    balance: z.ZodObject<{
        quantity: z.ZodString;
        contract: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        quantity: string;
        contract: string;
    }, {
        quantity: string;
        contract: string;
    }>;
    id: z.ZodString;
    txid: z.ZodString;
    chain: z.ZodString;
    deposit_address: z.ZodString;
    status: z.ZodNativeEnum<typeof Status>;
    finish_txid: z.ZodString;
    wrap_hash: z.ZodString;
    confirmations: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    status: Status;
    balance: {
        quantity: string;
        contract: string;
    };
    id: string;
    txid: string;
    chain: string;
    deposit_address: string;
    confirmations: number;
    wrap_hash: string;
    index: number;
    proton_account: string;
    finish_txid: string;
}, {
    status: Status;
    balance: {
        quantity: string;
        contract: string;
    };
    id: string;
    txid: string;
    chain: string;
    deposit_address: string;
    confirmations: number;
    wrap_hash: string;
    index: number;
    proton_account: string;
    finish_txid: string;
}>;
export declare type Wrap = z.infer<typeof wrapParser>;
