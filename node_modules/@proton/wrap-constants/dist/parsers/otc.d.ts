import * as z from 'zod';
export declare const otcOrderResponseParser: z.ZodObject<{
    success: z.ZodBoolean;
    transaction_id: z.ZodString;
    errormsg: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    errormsg?: string | undefined;
    success: boolean;
    transaction_id: string;
}, {
    errormsg?: string | undefined;
    success: boolean;
    transaction_id: string;
}>;
export declare type OtcOrderResponse = z.infer<typeof otcOrderResponseParser>;
export declare const otcQuoteBodyParser: z.ZodObject<{
    baseAmount: z.ZodNumber;
    baseSymbol: z.ZodString;
    quoteSymbol: z.ZodString;
}, "strip", z.ZodTypeAny, {
    baseAmount: number;
    baseSymbol: string;
    quoteSymbol: string;
}, {
    baseAmount: number;
    baseSymbol: string;
    quoteSymbol: string;
}>;
export declare type OtcQuoteBody = z.infer<typeof otcQuoteBodyParser>;
export declare const otcQuoteResponseParser: z.ZodObject<{
    success: z.ZodBoolean;
    token: z.ZodString;
    qty: z.ZodNumber;
    errormsg: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    errormsg?: string | undefined;
    success: boolean;
    token: string;
    qty: number;
}, {
    errormsg?: string | undefined;
    success: boolean;
    token: string;
    qty: number;
}>;
export declare type OtcQuoteResponse = z.infer<typeof otcQuoteResponseParser>;
