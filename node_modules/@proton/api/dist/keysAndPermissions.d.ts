import type { ApiClass } from './index';
export declare function getControlledAccounts(this: ApiClass, accountName: string): Promise<any> | never[];
export declare function getPermissionLinks(this: ApiClass, account: string): Promise<any>;
export declare function dfuseGetKeyAccounts(this: ApiClass, key: string): Promise<string[]>;
export declare function nativeGetKeyAccounts(this: ApiClass, key: string): Promise<string[]>;
export declare function hyperionGetKeyAccounts(this: ApiClass, key: string): Promise<string[]>;
export declare function lightGetKeyAccounts(this: ApiClass, key: string): Promise<string[]>;
export declare function getKeyAccountsByType(this: ApiClass, key: string, type: string): Promise<string[]>;
/**
 * Tries all histories to get keys.
 * @param {*} key
 */
export declare function getKeyAccounts(this: ApiClass, key: string): Promise<string[]>;
export declare function getKeyAccountsForAllChains(this: ApiClass, key: string): Promise<Array<{
    chain: string;
    accounts: string[];
}>>;
/**
 * Recursively resolves all required permissions
 * @param accountName
 * @param permission
 */
export declare function getRequiredAccounts(this: ApiClass, accountName: string, permissionName: string, allPermissions?: any, currentLevel?: number, maxLevel?: number): Promise<any>;
export declare function getUsersFromKeys(this: ApiClass, keys: string[]): Promise<any>;
