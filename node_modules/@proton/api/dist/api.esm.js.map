{"version":3,"file":"api.esm.js","sources":["../src/account.ts","../src/actions.ts","../src/dsp.ts","../src/http.ts","../src/fio.ts","../src/msig.ts","../src/voting.ts","../src/types/proton.ts","../src/proton/countryOptions.ts","../src/proton/kyc.ts","../src/proton/parsers.ts","../src/proton/metal.ts","../src/proton/otc.ts","../src/proton/wrap.ts","../src/proton/general.ts","../src/resources.ts","../src/stats.ts","../src/rex.ts","../src/token.ts","../src/transaction.ts","../src/keysAndPermissions.ts","../src/index.ts"],"sourcesContent":["import type { ApiClass } from './index'\nimport { Numeric } from '@proton/js'\nimport { urlBuilder } from '@bloks/utils'\n\nexport async function getAccount (this: ApiClass, accountName: string) {\n  try {\n    const account = await this.rpc.get_account(accountName)\n\n    account.permissions = account.permissions.map((permission: any) => {\n      permission.required_auth.keys = permission.required_auth.keys.map((key: any) => {\n        if (key.key.indexOf(this.constants.KEY_PREFIX) !== -1) {\n          key.key = Numeric.convertLegacyPublicKey(key.key, this.constants.KEY_PREFIX)\n        }\n        return key\n      })\n      return permission\n    })\n    return account\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport async function searchAccount (this: ApiClass, query: string, limit: number) {\n  if(!query || !/(^[a-zA-Z12345.]+$)/.test(query)) {\n    return []\n  }\n\n  // Scope search does not work well with .\n  if (query.indexOf('.') === 0) {\n    return []\n  }\n\n  try {\n    query = query.trim().toLowerCase()\n\n    const { rows } = await this.rpc.get_table_by_scope({\n      json: true,\n      code: this.constants.EOSIO,\n      limit: limit,\n      lower_bound: query,\n      table: 'userres',\n      upper_bound: `${query}${query.length < 12 ? 'z'.repeat(12 - query.length) : ''}`\n    })\n    return rows.map((row: any) => row.scope)\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function getGravatar (this: ApiClass, account: string) {\n  if (this.constants.CHAIN === 'eos') {\n    const result = await this.rpc.get_table_rows({\n      json: true,\n      code: this.constants.ACCOUNT_INFO,\n      scope: this.constants.ACCOUNT_INFO,\n      table: 'accounts',\n      table_key: '',\n      key_type: 'name',\n      lower_bound: account,\n      index_position: 1,\n      limit: 1\n    })\n\n    return result.rows.length > 0 && result.rows[0].account_name === account\n      ? result.rows[0]\n      : undefined\n  } else {\n    return undefined\n  }\n}\n\nexport async function getParent (this: ApiClass, account: string) {\n  if (this.constants.HISTORY_TYPES.includes('hyperion')) {\n    if (this.constants.HYPERION_URL) {\n      return this.hyperion.get_creator(account)\n    } else {\n      return this.get(\n        urlBuilder(this.constants.API_URL, 'hyperion', {\n          type: 'get_creator',\n          account\n        })\n      )\n    }\n  } else {\n    return null\n  }\n}\n\nexport async function getAccountLightData (this: ApiClass, accountName: string) {\n  if (!this.lightApi) {\n    return undefined\n  }\n\n  try {\n    return await this.lightApi.get_account_info(accountName)\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}","import type { ApiClass } from './index'\nimport { urlBuilder, nativeTransformGetActions, dfuseTransformGetActions, hyperionTransformGetActions } from '@bloks/utils'\n\nexport async function getActionsFromNative (this: ApiClass, accountName: string, actionSkip: number, actionsPerPage: number, historyType = 'native') {\n  console.log('Fetching actions from:', historyType)\n  console.log('Fetch Params:', 'actionSkip', actionSkip, 'actionsPerPage', actionsPerPage)\n\n  // Request\n  const result = await this.actionsRpc.history_get_actions(accountName, actionSkip, actionsPerPage) // -1, -100 for last 100 actions\n\n  // Validation\n  if (!result) {\n    throw new Error('Could not retrieve actions')\n  }\n\n  // Transform\n  if (historyType === 'native') {\n    return nativeTransformGetActions(result, this.constants)\n  }\n\n  return []\n}\n\nexport async function getActions (this: ApiClass, accountName: string, historyType: string, {\n  actionsPerPage = 100,\n  actionSkip = 0,\n  sortDirection = 'desc',\n  dfuseCursorStack = [],\n  tokenFilter,\n  actionFilters,\n  contractFilter,\n  actionFilter,\n  start,\n  end\n} = {} as {\n  actionsPerPage: number,\n  actionSkip: number,\n  sortDirection: string,\n  dfuseCursorStack: string[],\n  tokenFilter: any,\n  actionFilters: any,\n  contractFilter: string,\n  actionFilter: string,\n  start?: string | undefined,\n  end: string | undefined\n}) {\n  if (!start) {\n    start = this.constants.CHAIN_START_DATE\n  }\n\n  // Fallback for history type\n  console.log(this.constants.HISTORY_TYPES)\n  if (!historyType && this.constants.HISTORY_TYPES.length) {\n    historyType = this.constants.HISTORY_TYPES[0]\n  }\n\n  // Fix for firefox and IE and safari\n  if (start && end) {\n    start = start || this.constants.CHAIN_START_DATE\n      ? new Date(start || this.constants.CHAIN_START_DATE).toISOString()\n      : undefined\n    end = new Date(end || new Date()).toISOString()\n  } else {\n    start = undefined\n    end = undefined\n  }\n\n  let result\n\n  if (historyType === 'dfuse') {\n    const inputCursor = dfuseCursorStack.length > 0 ? dfuseCursorStack[dfuseCursorStack.length - 1] : ''\n    result = await this.getActionsFromDfuse(accountName, {\n      limit: actionsPerPage,\n      cursor: inputCursor,\n      direction: sortDirection,\n      query: '',\n      after: start,\n      before: end,\n      tokenFilter,\n      actionFilters,\n      contractFilter,\n      actionFilter\n    })\n\n  } else if (historyType === 'hyperion') {\n    result = await this.getActionsFromHyperion(accountName, {\n      skip: Math.abs(actionSkip) - 1,\n      limit: actionsPerPage,\n      sort: sortDirection,\n      after: start,\n      before: end,\n      tokenFilter,\n      actionFilters,\n      contractFilter,\n      actionFilter\n    })\n  } else {\n    result = await this.getActionsFromNative(\n      accountName,\n      actionSkip,\n      -actionsPerPage,\n      'native'\n    )\n  }\n\n  return result\n}\n\nexport async function getActionsFromDfuse (this: ApiClass, accountName: string, {\n  before,\n  after,\n  limit = 25,\n  cursor,\n  query,\n  direction = 'desc',\n  tokenFilter,\n  actionFilters,\n  contractFilter,\n  actionFilter,\n  type = 'search_transactions_graphql'\n} = {} as {\n  before        : string | undefined,\n  after         : string | undefined,\n  limit         : number,\n  cursor        : string,\n  query         : string,\n  direction     : string,\n  tokenFilter   : any,\n  actionFilters : any,\n  contractFilter: string,\n  actionFilter  : string,\n  type?         : string\n}) {\n  let q = query || `(auth:${accountName} OR\n                    receiver:${accountName} OR\n                    data.to:${accountName} OR\n                    data.from:${accountName} OR\n                    data.receiver:${accountName})`\n\n  if (tokenFilter) {\n    let [, tokenContract] = tokenFilter.split(' ')\n    let tokenfilter = `account:${tokenContract}`\n    q = `${q} ${tokenfilter}`\n  }\n\n  if (actionFilters) {\n    let actionFiltersLocal = Object.entries(actionFilters).reduce((filters, [, value]) => {\n      return (value as any).isActive ? filters.concat(value as any) : filters\n    }, [])\n\n    if (actionFiltersLocal.length) {\n      let actionFiltersQuery = actionFiltersLocal\n        .map((filter: any) => filter.dfuseQuery(accountName))\n        .join(' OR ')\n\n      // Wrap around the action filters\n      if (actionFiltersQuery.search('OR') !== -1) {\n        actionFiltersQuery = `(${actionFiltersQuery})`\n      }\n\n      // Set the action filters\n      q = `${q} ${actionFiltersQuery}`\n    }\n\n    if (contractFilter) {\n      q = `${q} account:${contractFilter}`\n    }\n\n    if (actionFilter) {\n      q = `${q} action:${actionFilter}`\n    }\n  }\n\n  let result = await this.get(\n    urlBuilder(this.constants.API_URL, 'dfuse', {\n      type: type,\n      q: q,\n      options: Object.assign({}, {\n        sort: direction,\n        cursor: cursor,\n        limit: limit,\n        withReversible: true,\n        before: before,\n        after: after,\n        code: 1\n      })\n    })\n  ) as any\n\n  // Validation\n  if (!result) {\n    throw new Error('Could not retrieve actions')\n  }\n\n  return dfuseTransformGetActions(result, accountName, this.constants)\n}\n\nexport async function getActionsFromHyperion (this: ApiClass, account: string, {\n  skip,\n  limit,\n  sort,\n  after,\n  before,\n  filter,\n  tokenFilter,\n  actionFilters,\n  contractFilter,\n  actionFilter,\n} = {} as {\n  skip: number,\n  limit: number,\n  sort: string,\n  after?: string | undefined,\n  before?: string | undefined,\n  filter?: string | undefined,\n  tokenFilter?: any,\n  actionFilters?: any,\n  contractFilter?: string,\n  actionFilter?: string\n}) {\n  // Initialize\n  const params = {\n    filter,\n    skip,\n    limit,\n    sort,\n    after,\n    before\n  }\n\n  console.log('Fetching actions from Hyperion')\n\n  let result\n\n  // Token filter, we would only receive undefined or *:action\n  if (tokenFilter) {\n    let [, tokenContract] = tokenFilter.split(' ')\n    if (params.filter) {\n      params.filter = params.filter.replace('*', tokenContract)\n    } else {\n      params.filter = `${tokenContract}:*`\n    }\n  }\n\n  if (actionFilters) {\n    const actionFiltersLocal = Object.entries(actionFilters).reduce((filters, [, value]) => {\n      return (value as any).isActive ? filters.concat(value as any) : filters\n    }, [])\n    if (actionFiltersLocal.length) {\n      for (const eachFilter of actionFiltersLocal as any) {\n        eachFilter.hyperionQuery(account, params)\n      }\n      console.log(params)\n    }\n  }\n\n  // Actions contract filters\n  if (contractFilter) {\n    if (params.filter) {\n      params.filter = params.filter\n        .split(',')\n        .map(filter => `${contractFilter}:${filter.split(':')[1]}`)\n        .join(',')\n    } else {\n      params.filter = `${contractFilter}:*`\n    }\n  }\n\n  if (actionFilter) {\n    if (params.filter) {\n      const uniqueContracts = Array.from(\n        new Set(\n          params.filter\n            .split(',')\n            .map(filter => filter.split(':')[0])\n        )\n      )\n      params.filter = uniqueContracts\n        .map(contract => `${contract}:${actionFilter}`)\n        .join(',')\n    } else {\n      params.filter = `*:${actionFilter}`\n    }\n  }\n\n  // If hyperion URL provided, do it client side\n  if (this.constants.HYPERION_URL) {\n    result = await this.hyperion.get_actions(account, Object.assign({}, params))\n  // For eosfinex, etc\n  } else {\n    result = await this.get(\n      urlBuilder(this.constants.API_URL, 'hyperion', {\n        type: 'get_actions',\n        account,\n        options: Object.assign({}, params)\n      })\n    ) as any\n  }\n\n  // Validation\n  if (!result) throw new Error('Could not retrieve actions')\n\n  return hyperionTransformGetActions(result)\n}","import type { ApiClass } from './index'\n\nexport async function getDappStats (this: ApiClass) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        code: 'dappservices',\n        json: true,\n        limit: 1,\n        scope: '......2ke1.o4',\n        table: 'statext'\n      })\n\n      if (!result || !result.rows || !result.rows.length) {\n        return {}\n      } else {\n        return result.rows[0]\n      }\n    } catch (e) {\n      console.log(e)\n      return {}\n    }\n}\n\nexport async function getDspPackages (this: ApiClass) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        code: 'dappservices',\n        json: true,\n        limit: 500,\n        scope: 'dappservices',\n        table: 'package'\n      })\n      return result && result.rows && result.rows.length\n        ? result.rows\n        : []\n    } catch (e) {\n      console.log(e)\n      return []\n    }\n}\n\nexport async function getDapphodlBalance (this: ApiClass, account: string) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        code: 'dappairhodl1',\n        json: true,\n        limit: 1,\n        scope: account,\n        table: 'accounts'\n      })\n      return result && result.rows && result.rows.length\n        ? result.rows[0]\n        : {}\n    } catch (e) {\n      return {}\n    }\n}\n\nexport async function getDappBalance (this: ApiClass, account: string) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        code: 'dappservices',\n        json: true,\n        limit: 1,\n        scope: account,\n        table: 'accounts'\n      })\n      return result && result.rows && result.rows.length\n        ? result.rows[0]\n        : {}\n    } catch (e) {\n      return {}\n    }\n}\n\nexport async function getDappStakes (this: ApiClass, account: string) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        code: 'dappservices',\n        json: true,\n        limit: 100,\n        scope: account,\n        table: 'staking'\n      })\n      return result && result.rows && result.rows.length\n        ? result.rows.map((row: any) => {\n          row.scope = account\n          return row\n        })\n        : []\n    } catch (e) {\n      return []\n    }\n}\n\nexport async function getDapphodlStakes (this: ApiClass, account: string, lower_bound: string | number = '') {\n    try {\n      const result = await this.rpc.get_table_rows({\n        code: 'dappservices',\n        json: true,\n        limit: 1000,\n        scope: 'dappairhodl1',\n        table: 'staking',\n        lower_bound\n      })\n      if (!result) return []\n\n      let rows = result.rows\n      if (result.more) {\n        rows = rows.concat(await this.getDapphodlStakes(account, +rows[rows.length - 1].id + 1))\n      }\n\n      return rows\n        .filter((row: any) => row.account === account)\n        .map((row: any) => {\n          row.scope = 'dappairhodl1'\n          return row\n        })\n    } catch (e) {\n      return []\n    }\n}\n\nexport async function getDappUnstakes (this: ApiClass, account: string) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        code: 'dappservices',\n        json: true,\n        limit: 100,\n        scope: account,\n        table: 'refunds'\n      })\n      return result && result.rows && result.rows.length\n        ? result.rows.map((row: any) => {\n          row.scope = account\n          return row\n        })\n        : []\n    } catch (e) {\n      return []\n    }\n}\n\nexport async function getDapphodlUnstakes (this: ApiClass, account: string) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        code: 'dappservices',\n        json: true,\n        limit: 1000,\n        scope: 'dappairhodl1',\n        table: 'refunds'\n      })\n      if (!result) return []\n\n      let rows = result.rows\n      if (result.more) {\n        rows = rows.concat(await this.getDapphodlUnstakes(account))\n      }\n      return rows\n        .filter((row: any) => row.account === account)\n        .map((row: any) => {\n          row.scope = 'dappairhodl1'\n          return row\n        })\n    } catch (e) {\n      return []\n    }\n}\n  ","import { RpcError } from '@proton/js'\nimport fetch from 'cross-fetch'\n\nexport const http = async <T> ({\n  path,\n  method,\n  body,\n  headers\n}: {\n  path: string,\n  method: string,\n  body?: any,\n  headers?: any\n}): Promise<T> => {\n  let data\n  let response\n\n  try {\n    response = await fetch(path, {\n      method,\n      body,\n      headers: headers || {\n        'Content-Type': 'application/json'\n      },\n    })\n\n    data = await response.json()\n  } catch (e) {\n    console.log(e)\n  }\n\n  if (!(response && response.ok)) {\n    throw new RpcError(data || 'Error')\n  }\n\n  return data\n}\n\nexport const get = async <T> (\n  path: string,\n  headers?: any\n): Promise<T> => {\n  return await http({\n    path: path,\n    method: 'GET',\n    headers\n  });\n};\n\nexport const post = async <T> (\n  path: string,\n  body: any\n): Promise<T> => {\n  return await http({\n    path: path,\n    method: 'POST',\n    body: JSON.stringify(body)\n  });\n};","import type { ApiClass } from './index'\nimport { encodeName, string_to_uint128_hash } from '@bloks/utils'\nimport { post } from './http'\nimport { BigNumber as BN } from 'bignumber.js'\n\nexport async function getFIOPublicKey(this: ApiClass, account: string) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      json: true,\n      code: 'fio.address',\n      scope: 'fio.address',\n      lower_bound: encodeName(account, false),\n      upper_bound: encodeName(account, false),\n      table: 'accountmap',\n      limit: 1\n    })\n    return rows.length ? rows[0].clientkey : undefined\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\n\nexport async function getFIOVoter(this: ApiClass, account: string) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      json: true,\n      code: this.constants.EOSIO,\n      scope: this.constants.EOSIO,\n      lower_bound: encodeName(account, false),\n      upper_bound: encodeName(account, false),\n      table: 'voters',\n      key_type: 'i64',\n      index_position: 3,\n      limit: 1\n    })\n    return rows.length ? rows[0] : undefined\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport async function getFIOAddressByName(this: ApiClass, name: string) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: 'fio.address',\n      scope: 'fio.address',\n      table: 'fionames',\n      lower_bound: '0x' + await string_to_uint128_hash(name),\n      limit: 1,\n      key_type: 'i128',\n      index_position: 5\n    })\n    if (rows && rows.length && rows[0].name === name) {\n      return rows[0]\n    } else {\n      return undefined\n    }\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport async function getNFTsByFioAddress(this: ApiClass, name: string) {\n  try {\n    const { nfts } = await this.rpc.get_nfts_fio_address(name)\n\n    if (nfts && nfts.length) {\n      return nfts;\n    } else {\n      return []\n    }\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function getFIODomainByName(this: ApiClass, name: string) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: 'fio.address',\n      scope: 'fio.address',\n      table: 'domains',\n      lower_bound: '0x' + await string_to_uint128_hash(name),\n      limit: 1,\n      key_type: 'i128',\n      index_position: 4\n    })\n    if (rows && rows.length && rows[0].name === name) {\n      return rows[0]\n    } else {\n      return undefined\n    }\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport async function getDomains(this: ApiClass, limit: number = -1, upper_bound: number) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: 'fio.address',\n      scope: 'fio.address',\n      table: 'domains',\n      reverse: true,\n      upper_bound,\n      limit: limit\n    })\n    if (rows && rows.length) {\n      return rows\n    } else {\n      return []\n    }\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function getAddresses(this: ApiClass, limit: number = -1, upper_bound: number) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: 'fio.address',\n      scope: 'fio.address',\n      table: 'fionames',\n      reverse: true,\n      upper_bound,\n      limit\n    })\n    if (rows && rows.length) {\n      return rows\n    } else {\n      return []\n    }\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function getFIOProducers(this: ApiClass, limit: number) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: this.constants.EOSIO,\n      scope: this.constants.EOSIO,\n      table: 'producers',\n      reverse: true,\n      limit\n    })\n    if (rows && rows.length) {\n      return rows\n    } else {\n      return []\n    }\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function getFIOBalance(this: ApiClass, fio_public_key: string): Promise<null |\n{\n  balance: number;\n  available: number;\n  staked: number;\n  srps: number;\n  roe: string;\n}> {\n  try {\n    const balance = await this.rpc.fetch('/v1/chain/get_fio_balance', {\n      fio_public_key\n    })\n\n    if (balance) {\n      return balance\n    } else {\n      return null\n    }\n  } catch (e) {\n    console.log(e)\n    return null\n  }\n}\n\nexport async function getFIOSupplyBreakdown(this: ApiClass) {\n  const tokenRes = await this.rpc.get_table_rows({\n    code: \"fio.token\",\n    scope: \"FIO\",\n    table: \"stat\",\n  })\n  const supply = +tokenRes.rows[0].supply.split(' ')[0]\n\n  const bpRewardRes = await this.rpc.get_table_rows({\n    code: \"fio.treasury\",\n    scope: \"fio.treasury\",\n    table: \"bprewards\",\n  })\n  const bpRewards = bpRewardRes.rows[0].rewards / Math.pow(10, this.constants.CORE_PRECISION)\n\n  const bpBucketRes = await this.rpc.get_table_rows({\n    code: \"fio.treasury\",\n    scope: \"fio.treasury\",\n    table: \"bpbucketpool\",\n  })\n  const bpBucket = bpBucketRes.rows[0].rewards / Math.pow(10, this.constants.CORE_PRECISION)\n\n  const totalBp = bpRewards + bpBucket\n  // const totalLocked = baseLocked + totalBp\n  // const circulating = supply - totalLocked\n  const circulating = await this.get<string>('https://fioprotocol.io/circulating')\n  const totalLocked = supply - +circulating\n\n  return {\n    supply,\n    totalLocked,\n    bpRewards,\n    bpBucket,\n    totalBp,\n    circulating\n  }\n}\n\nexport async function getFIOFees(this: ApiClass) {\n  return this.rpc.get_table_rows({\n    code: 'fio.fee',\n    scope: 'fio.fee',\n    table: 'fiofees',\n    limit: -1\n  }).then((result: any) => result.rows)\n    .catch((_: any) => [])\n}\n\nexport async function addFIOFeeToActions(this: ApiClass, actions: any, actor: string) {\n  const fioFeesMap: any = {\n    'eosio::deleteauth': 'auth_delete',\n    'eosio::linkauth': 'auth_link',\n    'eosio::regproducer': 'register_producer',\n    'eosio::regproxy': 'register_proxy',\n    'eosio::unregprod': 'unregister_producer',\n    'eosio::unregproxy': 'unregister_proxy',\n    'eosio::updateauth': 'auth_update',\n    'eosio::voteproducer': 'vote_producer',\n    'eosio::voteproxy': 'proxy_vote',\n    'fio.token::trnsfiopubky': 'transfer_tokens_pub_key',\n    'fio.address::addaddress': 'add_pub_address',\n    'fio.address::regaddress': 'register_fio_address',\n    'fio.address::regdomain': 'register_fio_domain',\n    'fio.address::renewaddress': 'renew_fio_address',\n    'fio.address::renewdomain': 'renew_fio_domain',\n    'fio.address::setdomainpub': 'set_fio_domain_public',\n    'eosio.msig::approve': 'msig_approve',\n    'eosio.msig::cancel': 'msig_cancel',\n    'eosio.msig::exec': 'msig_exec',\n    'eosio.msig::invalidate': 'msig_invalidate',\n    'eosio.msig::propose': 'msig_propose',\n    'eosio.msig::unapprove': 'msig_approve',\n    'fio.reqobt::newfundsreq': 'new_funds_request',\n    'fio.reqobt::rejectfndreq': 'reject_funds_request',\n    'fio.reqobt::cancelfndreq': 'cancelfndreq',\n    'fio.reqobt::recordobt': 'record_obt_data',\n    'fio.reqobt::newpubaddreq': 'new_pub_address_request',\n    'fio.reqobt::relpubadd': 'release_pub_address',\n    'fio.reqobt::rejectaddreq': 'reject_pub_address_request',\n    'fio.reqobt::canceladdreq': 'cancel_pub_address_request',\n    'fio.lock::trnsloctoks': 'transfer_locked_tokens',\n    'fio.lock::locktokens': 'lock_tokens',\n    'fio.address::remaddress': 'remove_pub_address',\n    'fio.address::remalladdr': 'remove_all_pub_addresses',\n    'fio.address::burnaddress': 'burn_fio_address',\n    'fio.address::xferdomain': 'transfer_fio_domain',\n    'fio.address::xferaddress': 'transfer_fio_address'\n  }\n  const fees = await this.getFIOFees()\n  let modifiedActions = []\n\n  for (let action of actions) {\n    const { abi: { actions: abiActions, structs: abiStructs } } = await this.api.getCachedAbi(action.account)\n    const relevantAction = abiActions.find((abiAction: any) => abiAction.name === action.name)\n    if (relevantAction) {\n      const relevantStruct = abiStructs.find((abiStruct: any) => abiStruct.name === relevantAction.type)\n      if (relevantStruct) {\n        const maxFeeField = relevantStruct.fields.find((field: any) => field.name === \"max_fee\")\n        if (maxFeeField && action.data.max_fee === undefined) {\n          const endpoint = fioFeesMap[`${action.account}::${action.name}`]\n          if (endpoint) {\n            const relevantFee = fees.find((fee: any) => fee.end_point === endpoint)\n            if (relevantFee) {\n              action.data.max_fee = relevantFee.suf_amount\n            } else {\n              action.data.max_fee = 0\n            }\n          }\n        }\n\n        const actorField = relevantStruct.fields.find((field: any) => field.name === \"actor\")\n        if (actorField && action.data.actor === undefined) {\n          action.data.actor = actor\n        }\n\n        const tpidField = relevantStruct.fields.find((field: any) => field.name === \"tpid\")\n        if (tpidField && action.data.tpid === undefined) {\n          action.data.tpid = this.constants.FIO_FEES_ACCOUNT\n        }\n\n        const addressField = relevantStruct.fields.find((field: any) => field.name === \"fio_address\")\n        if (addressField && action.data.fio_address === undefined) {\n          const addresses = await this.getFIOAddresses(actor)\n          if (addresses.length) {\n            action.data.fio_address = addresses[0].name\n          }\n        }\n      }\n    }\n\n    modifiedActions.push(action)\n  }\n  return modifiedActions\n}\n\nexport function getFIOAddresses(this: ApiClass, account: string) {\n  return this.rpc.get_table_rows({\n    code: 'fio.address',\n    scope: 'fio.address',\n    table: 'fionames',\n    key_type: 'i64',\n    limit: -1,\n    lower_bound: encodeName(account, false),\n    upper_bound: new BN(encodeName(account, false)).plus(1).toString(),\n    index_position: 4\n  }).then((result: any) => {\n    if (result.rows.length > 0) {\n      return result.rows.filter((row: any) => row.owner_account === account)\n    } else {\n      return []\n    }\n  }).catch((_: any) => [])\n}\n\nexport async function getFIODomains(this: ApiClass, fio_public_key: string) {\n  try {\n    const { fio_domains } = await this.rpc.fetch('/v1/chain/get_fio_domains', {\n      fio_public_key\n    })\n\n    for (const domain of fio_domains) {\n      domain.name = domain.fio_domain\n    }\n    return fio_domains\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport function getFIOAddressesAndDomains(this: ApiClass, fio_public_key: string) {\n  return post(`${this.constants.DEFAULT_ENDPOINTS[0]}/v1/get_fio_names`, { fio_public_key })\n}","import type { ApiClass } from './index'\nimport { urlBuilder, encodeName, hexToUint8Array } from '@bloks/utils'\n\nexport async function getAllMsigs (this: ApiClass) {\n  if (this.constants.HISTORY_TYPES.includes('dfuse')) {\n    let { tables } = await this.get<{ tables: any }>(\n      urlBuilder(this.constants.API_URL, 'dfuse', {\n        type: 'state_scope_pipeline',\n        account: this.constants.EOSIO_MSIG,\n        table: this.constants.EOSIO_MSIG_PROPOSALS_TABLE,\n        options: {}\n      })\n    )\n\n    tables = tables\n      .map((table: any) => {\n        table.rows = table.rows.sort((a: any, b: any) => b.block - a.block)\n        table.highestBlock = table.rows[0].block\n        return table\n      }).sort((a: any, b: any) => b.highestBlock - a.highestBlock)\n\n    return tables\n  } else {\n    let rows: any[] = []\n    let lower_bound = ''\n\n    do {\n      const result = await this.rpc.get_table_by_scope({\n        json: true,\n        code: 'eosio.msig',\n        limit: 100,\n        lower_bound: lower_bound,\n        table: 'proposal',\n        upper_bound: ''\n      })\n\n      lower_bound = result.more\n      rows = rows.concat(result.rows)\n    } while (lower_bound)\n\n    return rows.map(\n      row => ({\n        scope: row.scope,\n        rows: Array(row.count).fill({ key: '' })\n      })\n    )\n  }\n}\n\nexport async function getMsigProposal (this: ApiClass, accountName: string, proposalName: string) {\n  const { rows } = await this.rpc.get_table_rows({\n    json: true,\n    code: 'eosio.msig',\n    scope: accountName,\n    limit: 1,\n    lower_bound: proposalName,\n    table: 'proposal',\n  })\n\n  if (rows && rows.length && rows[0].proposal_name === proposalName) {\n    return rows[0]\n  } else {\n    return undefined\n  }\n}\n\n\nexport async function parsePackedMsigActions (this: ApiClass, packedActions: any) {\n  let actions = []\n\n  for (let action of packedActions) {\n    // Recursive msig\n    if (action.account === this.constants.EOSIO_MSIG && action.name === 'propose') {\n      action.data.trx.actions = await this.api.deserializeActionsSync(action.data.trx.actions)\n    }\n\n    if (action.account === this.constants.EOSIO && action.name === 'setabi') {\n      action.data.abi = await this.api.rawAbiToJson(hexToUint8Array(action.data.abi))\n    }\n\n    actions.push(action)\n  }\n\n  actions = actions.map((action: any) => ({\n    action_trace: {\n      act: action\n    }\n  }))\n\n  return actions\n}\n\nexport async function parsePackedMsig (this: ApiClass, packed_transaction: any) {\n  try {\n    const tx = await this.api.deserializeTransactionWithActions(packed_transaction)\n    tx.actions = await this.parsePackedMsigActions(tx.actions)\n    return tx\n  } catch (e) {\n    console.log('Error parsing packed msig')\n    console.log(e)\n  }\n}\n\nexport async function getFullMsigProposal (this: ApiClass, account_name: string, proposal_name: string) {\n  try {\n    const result = await this.rpc.get_table_rows({\n      json: true,\n      code: this.constants.EOSIO_MSIG,\n      scope: encodeName(account_name, false),\n      table: this.constants.EOSIO_MSIG_PROPOSALS_TABLE,\n      table_key: '',\n      key_type: 'name',\n      lower_bound: proposal_name,\n      index_position: 1,\n      limit: 1\n    })\n\n    if (result && result.rows && result.rows.length) {\n      return await this.parsePackedMsig(result.rows[0].packed_transaction)\n    }\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport async function getMsigApprovals (this: ApiClass, account: string, table: string) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      json: true,\n      code: this.constants.EOSIO_MSIG,\n      scope: encodeName(account, false),\n      table: table,\n      limit: -1\n    })\n    return rows\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function getAccountsMsigProposals (this: ApiClass, account: string) {\n  try {\n    const promises = [this.getMsigApprovals(account, this.constants.EOSIO_MSIG_APPROVALS_TABLE)]\n\n    if (this.constants.EOSIO_MSIG_APPROVALS_TABLE === 'approvals2') {\n      promises.push(this.getMsigApprovals(account, 'approvals'))\n    }\n\n    const [rows2, rows1] = await Promise.all(promises)\n\n    return rows2.concat(rows1)\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function hyperionGetMsig (this: ApiClass, msigFilters: any) {\n  if (!this.hyperion) return undefined\n\n  const res = await this.hyperion.get_proposals(msigFilters)\n\n  if (res && res.proposals && res.proposals.length) {\n    let executionTransaction, transaction\n    const proposal = res.proposals[0]\n\n    const [actionsRes, actionsRes2] = await Promise.all([\n      this.hyperion.get_actions(this.constants.EOSIO_MSIG, {\n        block_num: proposal.block_num,\n        limit: 1\n      }),\n      this.hyperion.get_deltas(this.constants.EOSIO_MSIG, msigFilters.proposer, 'proposal', undefined, { block_num: proposal.block_num })\n    ])\n\n    if (actionsRes && actionsRes.actions && actionsRes.actions.length) {\n      const relevantAction: any = actionsRes.actions.find((action: any) => action.act.data.proposal_name === msigFilters.proposal)\n      if (relevantAction) {\n        executionTransaction = {\n          payer: relevantAction.act.data.executer || relevantAction.act.data.canceler,\n          trx_id: relevantAction.trx_id,\n          published_at: relevantAction.timestamp,\n          cancelled: relevantAction.act.name === 'cancel'\n        }\n      }\n    }\n\n    if (actionsRes2 && actionsRes2.deltas && actionsRes2.deltas.length) {\n      const tx = (actionsRes2 as any).deltas[0].data.transaction\n      tx.actions = await this.parsePackedMsigActions(tx.actions)\n      transaction = tx\n    }\n\n    return {\n      approvals: proposal,\n      transaction,\n      executionTransaction\n    }\n  } else {\n    return undefined\n  }\n}\n","import { ApiClass, ChainGlobal, ProducerLocal, RowsResponse } from './index'\nimport { urlBuilder, encodeName } from '@bloks/utils'\nimport { BigNumber as BN } from 'bignumber.js'\n\nexport async function getVoter(this: ApiClass, account: string) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      json: true,\n      code: this.constants.EOSIO,\n      scope: this.constants.EOSIO,\n      lower_bound: encodeName(account, false),\n      upper_bound: encodeName(account, false),\n      table: 'voters',\n      limit: 1\n    })\n    return rows.length ? rows[0] : undefined\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport async function getProxies(this: ApiClass) {\n  if (this.constants.ALOHA_PROXY_URL !== '') {\n    const { proxies } = await this.get<{ proxies: any }>(`${this.constants.ALOHA_PROXY_URL}?output=json`)\n    return proxies\n  } else {\n    const { voters } = await this.hyperion.get_voters({ proxy: true, limit: 1000 })\n\n    return voters.map((voter: any, index: number) => ({\n      ...voter,\n      weight: voter.weight / Math.pow(10, this.constants.CORE_PRECISION),\n      rank: index + 1\n    }))\n  }\n}\n\nexport async function getVoters(this: ApiClass, producer: string) {\n  if (this.hyperion) {\n    const { voters } = await this.hyperion.get_voters({\n      producer,\n      limit: 100\n    })\n    const voteWeight = this.calculateVoteWeight()\n\n    return voters.map((voter: any) => ({\n      ...voter,\n      vote: this.weightedVoteToNumber(voter.weight, voteWeight)\n    }))\n  } else {\n    return undefined\n  }\n}\n\nexport function calculateVoteWeight(this: ApiClass) {\n  let decayWeeks = this.constants.CHAIN === 'wax' ? 13 : 52\n  let timestamp_epoch = 946684800000\n  let dates = (Date.now() / 1000) - (timestamp_epoch / 1000)\n  let weight = Math.floor(dates / (86400 * 7)) / decayWeeks\n  return Math.pow(2, weight)\n}\n\nexport function weightedVoteToNumber(this: ApiClass, weightedVote: number, voteWeight: number): number {\n  if (!voteWeight) {\n    voteWeight = this.calculateVoteWeight()\n  }\n  return (+weightedVote / voteWeight) / Math.pow(10, this.constants.CORE_PRECISION)\n}\n\nexport async function getProxyData(this: ApiClass, accountName: string) {\n  if (this.constants.ALOHA_PROXY_URL !== '') {\n    const { proxy } = await this.get<{ proxy: any }>(`${this.constants.ALOHA_PROXY_URL}/${accountName}?output=json`)\n    return proxy\n  } else {\n    return undefined\n  }\n}\n\nexport async function getProducersLocal(this: ApiClass): Promise<ProducerLocal[]> {\n  let more = true\n  let rows: any[] = []\n  let result = null\n  let lower_bound = null\n\n  do {\n    result = await this.rpc.get_table_rows({\n      json: true,\n      code: this.constants.EOSIO,\n      scope: this.constants.EOSIO,\n      table: 'producers',\n      lower_bound,\n      index_position: 1,\n      key_type: 'i64',\n      limit: 100\n    })\n\n    more = result.more\n    rows = rows.concat(result.rows)\n    lower_bound = new BN(\n      encodeName(rows[rows.length - 1].owner, false)\n    )\n      .plus(1)\n      .toString()\n  } while (more)\n\n  return rows\n}\n\nexport async function getProducers(this: ApiClass, pageNum = 1, perPage = 50, local = false): Promise<{\n  count: number,\n  producers: {\n    country: string;\n    flag: string;\n    location: number;\n    logo: string;\n    nodes: {\n      location: {\n        name: string,\n        country: string,\n        latitude: number,\n        longitude: number\n      }[]\n    }[],\n    num_votes: string,\n    owner: string,\n    percentage_votes: number,\n    producer_authority: any,\n    rank: number,\n    rankChange: number,\n    reward: string,\n    telegram: string,\n    twitter: string,\n    candidate_name: string,\n    url: string,\n    voteNumChange: number,\n    votePercentChange: number\n  }[]\n} | ProducerLocal[]> {\n  if (this.constants.API_URL !== '' && !local) {\n    return await this.get(\n      urlBuilder(this.constants.API_URL, 'producers', {\n        pageNum: pageNum,\n        perPage: perPage\n      })\n    )\n  } else {\n    return this.getProducersLocal()\n  }\n}\n\nexport async function getChainTable(this: ApiClass): Promise<ChainGlobal> {\n  const { rows }: RowsResponse<ChainGlobal> = await this.rpc.get_table_rows({\n    code: this.constants.EOSIO,\n    scope: this.constants.EOSIO,\n    table: 'global',\n    limit: 1\n  })\n  return rows[0]\n}\n","import * as z from 'zod'\nimport { chainInfoParser } from '../proton'\n\nexport interface Country {\n    id: string;\n    name: string;\n    region: string;\n    active: boolean;\n    localCurrency: string;\n}\n\nexport interface CountryOption {\n    key: string;\n    value: string;\n    flag: string;\n    text: string;\n}\n\nexport interface ApplyForKycParams {\n    chain: string;\n    actor: string;\n    permission: string;\n    transaction: any;\n    signatures: string[];\n    chainId: string;\n}\n  \nexport interface KycApplyResponse {\n    id:           string;\n    chainAccount: string;\n    status:       string;\n    tier:         number;\n    created:      Date;\n    updated:      Date;\n}\n  \nexport interface KycIpInfo {\n    ip:             string;\n    type:           string;\n    continent_code: string;\n    continent_name: string;\n    country_code:   string;\n    country_name:   string;\n    region_code:    string;\n    region_name:    string;\n    city:           string;\n    zip:            string;\n    latitude:       number;\n    longitude:      number;\n    location: {\n      geoname_id: number;\n      capital: string;\n      languages: {\n        code:   string;\n        name:   string;\n        native: string;\n      } [];\n      country_flag:               string;\n      country_flag_emoji:         string;\n      country_flag_emoji_unicode: string;\n      calling_code:               string;\n      is_eu:                      boolean;\n    };\n    time_zone: {\n      id:                 string;\n      current_time:       Date;\n      gmt_offset:         number;\n      code:               string;\n      is_daylight_saving: boolean;\n    };\n    currency: {\n      code:          string;\n      name:          string;\n      plural:        string;\n      symbol:        string;\n      symbol_native: string;\n    };\n    connection: {\n      asn: number;\n      isp: string;\n    };\n}\n\nexport enum KycStatus {\n    FAILED = \"FAILED\",\n    UNSUBMITTED = \"UNSUBMITTED\",\n    PENDING = \"PENDING\",\n    PASSED = \"PASSED\"\n}\n\nexport type KycStatusResponse = {\n    tier: string;\n    status: KycStatus;\n}[]\n\nexport type FeatureResponse = \"TRUE\" | \"FALSE\" | \"NEEDS_KYC\"\n\nexport interface AvailableFeatures {\n  fiat: FeatureResponse,\n  swap: FeatureResponse,\n  loan: FeatureResponse,\n  bridge: FeatureResponse\n}\n\nexport interface CreateAccountParams {\n    email: string;\n    name: string;\n    chainAccount: string;\n    activePublicKey: string;\n    ownerPublicKey: string;\n    verificationCode?: string;\n}\nexport interface CreateOrLoginAccountResponse {\n  id:           string;\n  token:        string;\n  refreshToken: string;\n  expiresAt:    number;\n  createdAt:    number;\n  updatedAt:    number;\n  user:         {\n    id:            string;\n    email:         string;\n    emailVerified: boolean;\n    chainAccount:  string;\n    status:        string;\n    createdAt:     number;\n    updatedAt:     number;\n  };\n}\n\nexport interface CreateOrLoginAccountResponseError {\n  error: string;\n  message: string;\n}\n\nexport interface LoginAccountParams {\n    chainAccount: string;\n    signature: string;\n    email?: string;\n    verificationCode?: string;\n}\n\nexport type IChainInfo = z.infer<typeof chainInfoParser>\n\nexport interface OraclePoint {\n  d_string: string | null;\n  d_uint64_t: string | number | null;\n  d_double: string | null;\n}\n\nexport interface OracleRow {\n  feed_index: number;\n  aggregate: {\n    d_string: string | null;\n    d_uint64_t: string | number | null;\n    d_double: string | null;\n  };\n  points: Array<{\n    provider: string;\n    time: string;\n    data: OraclePoint\n  }>\n}","export default [\n  { key: 'AF', value: 'AF', flag: 'af', text: 'Afghanistan' },\n  { key: 'AX', value: 'AX', flag: 'ax', text: 'Aland Islands' },\n  { key: 'AL', value: 'AL', flag: 'al', text: 'Albania' },\n  { key: 'DZ', value: 'DZ', flag: 'dz', text: 'Algeria' },\n  { key: 'AS', value: 'AS', flag: 'as', text: 'American Samoa' },\n  { key: 'AD', value: 'AD', flag: 'ad', text: 'Andorra' },\n  { key: 'AO', value: 'AO', flag: 'ao', text: 'Angola' },\n  { key: 'AI', value: 'AI', flag: 'ai', text: 'Anguilla' },\n  { key: 'AG', value: 'AG', flag: 'ag', text: 'Antigua' },\n  { key: 'AR', value: 'AR', flag: 'ar', text: 'Argentina' },\n  { key: 'AM', value: 'AM', flag: 'am', text: 'Armenia' },\n  { key: 'AW', value: 'AW', flag: 'aw', text: 'Aruba' },\n  { key: 'AU', value: 'AU', flag: 'au', text: 'Australia' },\n  { key: 'AT', value: 'AT', flag: 'at', text: 'Austria' },\n  { key: 'AZ', value: 'AZ', flag: 'az', text: 'Azerbaijan' },\n  { key: 'BS', value: 'BS', flag: 'bs', text: 'Bahamas' },\n  { key: 'BH', value: 'BH', flag: 'bh', text: 'Bahrain' },\n  { key: 'BD', value: 'BD', flag: 'bd', text: 'Bangladesh' },\n  { key: 'BB', value: 'BB', flag: 'bb', text: 'Barbados' },\n  { key: 'BY', value: 'BY', flag: 'by', text: 'Belarus' },\n  { key: 'BE', value: 'BE', flag: 'be', text: 'Belgium' },\n  { key: 'BZ', value: 'BZ', flag: 'bz', text: 'Belize' },\n  { key: 'BJ', value: 'BJ', flag: 'bj', text: 'Benin' },\n  { key: 'BM', value: 'BM', flag: 'bm', text: 'Bermuda' },\n  { key: 'BT', value: 'BT', flag: 'bt', text: 'Bhutan' },\n  { key: 'BO', value: 'BO', flag: 'bo', text: 'Bolivia' },\n  { key: 'BA', value: 'BA', flag: 'ba', text: 'Bosnia' },\n  { key: 'BW', value: 'BW', flag: 'bw', text: 'Botswana' },\n  { key: 'BV', value: 'BV', flag: 'bv', text: 'Bouvet Island' },\n  { key: 'BR', value: 'BR', flag: 'br', text: 'Brazil' },\n  { key: 'VG', value: 'VG', flag: 'vg', text: 'British Virgin Islands' },\n  { key: 'BN', value: 'BN', flag: 'bn', text: 'Brunei' },\n  { key: 'BG', value: 'BG', flag: 'bg', text: 'Bulgaria' },\n  { key: 'BF', value: 'BF', flag: 'bf', text: 'Burkina Faso' },\n  { key: 'BI', value: 'BI', flag: 'bi', text: 'Burundi' },\n  { key: 'TC', value: 'TC', flag: 'tc', text: 'Caicos Islands' },\n  { key: 'KH', value: 'KH', flag: 'kh', text: 'Cambodia' },\n  { key: 'CM', value: 'CM', flag: 'cm', text: 'Cameroon' },\n  { key: 'CA', value: 'CA', flag: 'ca', text: 'Canada' },\n  { key: 'CV', value: 'CV', flag: 'cv', text: 'Cape Verde' },\n  { key: 'KY', value: 'KY', flag: 'ky', text: 'Cayman Islands' },\n  { key: 'CF', value: 'CF', flag: 'cf', text: 'Central African Republic' },\n  { key: 'TD', value: 'TD', flag: 'td', text: 'Chad' },\n  { key: 'CL', value: 'CL', flag: 'cl', text: 'Chile' },\n  { key: 'CN', value: 'CN', flag: 'cn', text: 'China' },\n  { key: 'CX', value: 'CX', flag: 'cx', text: 'Christmas Island' },\n  { key: 'CC', value: 'CC', flag: 'cc', text: 'Cocos Islands' },\n  { key: 'CO', value: 'CO', flag: 'co', text: 'Colombia' },\n  { key: 'KM', value: 'KM', flag: 'km', text: 'Comoros' },\n  { key: 'CG', value: 'CG', flag: 'cg', text: 'Congo Brazzaville' },\n  { key: 'CD', value: 'CD', flag: 'cd', text: 'Congo' },\n  { key: 'CK', value: 'CK', flag: 'ck', text: 'Cook Islands' },\n  { key: 'CR', value: 'CR', flag: 'cr', text: 'Costa Rica' },\n  { key: 'CI', value: 'CI', flag: 'ci', text: 'Cote Divoire' },\n  { key: 'HR', value: 'HR', flag: 'hr', text: 'Croatia' },\n  { key: 'CU', value: 'CU', flag: 'cu', text: 'Cuba' },\n  { key: 'CY', value: 'CY', flag: 'cy', text: 'Cyprus' },\n  { key: 'CZ', value: 'CZ', flag: 'cz', text: 'Czech Republic' },\n  { key: 'DK', value: 'DK', flag: 'dk', text: 'Denmark' },\n  { key: 'DJ', value: 'DJ', flag: 'dj', text: 'Djibouti' },\n  { key: 'DM', value: 'DM', flag: 'dm', text: 'Dominica' },\n  { key: 'DO', value: 'DO', flag: 'do', text: 'Dominican Republic' },\n  { key: 'EC', value: 'EC', flag: 'ec', text: 'Ecuador' },\n  { key: 'EG', value: 'EG', flag: 'eg', text: 'Egypt' },\n  { key: 'SV', value: 'SV', flag: 'sv', text: 'El Salvador' },\n  { key: 'GB', value: 'GB', flag: 'gb', text: 'England' },\n  { key: 'GQ', value: 'GQ', flag: 'gq', text: 'Equatorial Guinea' },\n  { key: 'ER', value: 'ER', flag: 'er', text: 'Eritrea' },\n  { key: 'EE', value: 'EE', flag: 'ee', text: 'Estonia' },\n  { key: 'ET', value: 'ET', flag: 'et', text: 'Ethiopia' },\n  { key: 'EU', value: 'EU', flag: 'eu', text: 'European Union' },\n  { key: 'FK', value: 'FK', flag: 'fk', text: 'Falkland Islands' },\n  { key: 'FO', value: 'FO', flag: 'fo', text: 'Faroe Islands' },\n  { key: 'FJ', value: 'FJ', flag: 'fj', text: 'Fiji' },\n  { key: 'FI', value: 'FI', flag: 'fi', text: 'Finland' },\n  { key: 'FR', value: 'FR', flag: 'fr', text: 'France' },\n  { key: 'GF', value: 'GF', flag: 'gf', text: 'French Guiana' },\n  { key: 'PF', value: 'PF', flag: 'pf', text: 'French Polynesia' },\n  { key: 'TF', value: 'TF', flag: 'tf', text: 'French Territories' },\n  { key: 'GA', value: 'GA', flag: 'ga', text: 'Gabon' },\n  { key: 'GM', value: 'GM', flag: 'gm', text: 'Gambia' },\n  { key: 'GE', value: 'GE', flag: 'ge', text: 'Georgia' },\n  { key: 'DE', value: 'DE', flag: 'de', text: 'Germany' },\n  { key: 'GH', value: 'GH', flag: 'gh', text: 'Ghana' },\n  { key: 'GI', value: 'GI', flag: 'gi', text: 'Gibraltar' },\n  { key: 'GR', value: 'GR', flag: 'gr', text: 'Greece' },\n  { key: 'GL', value: 'GL', flag: 'gl', text: 'Greenland' },\n  { key: 'GD', value: 'GD', flag: 'gd', text: 'Grenada' },\n  { key: 'GP', value: 'GP', flag: 'gp', text: 'Guadeloupe' },\n  { key: 'GU', value: 'GU', flag: 'gu', text: 'Guam' },\n  { key: 'GT', value: 'GT', flag: 'gt', text: 'Guatemala' },\n  { key: 'GW', value: 'GW', flag: 'gw', text: 'Guinea-Bissau' },\n  { key: 'GN', value: 'GN', flag: 'gn', text: 'Guinea' },\n  { key: 'GY', value: 'GY', flag: 'gy', text: 'Guyana' },\n  { key: 'HT', value: 'HT', flag: 'ht', text: 'Haiti' },\n  { key: 'HM', value: 'HM', flag: 'hm', text: 'Heard Island' },\n  { key: 'HN', value: 'HN', flag: 'hn', text: 'Honduras' },\n  { key: 'HK', value: 'HK', flag: 'hk', text: 'Hong Kong' },\n  { key: 'HU', value: 'HU', flag: 'hu', text: 'Hungary' },\n  { key: 'IS', value: 'IS', flag: 'is', text: 'Iceland' },\n  { key: 'IN', value: 'IN', flag: 'in', text: 'India' },\n  { key: 'IO', value: 'IO', flag: 'io', text: 'Indian Ocean Territory' },\n  { key: 'ID', value: 'ID', flag: 'id', text: 'Indonesia' },\n  { key: 'IR', value: 'IR', flag: 'ir', text: 'Iran' },\n  { key: 'IQ', value: 'IQ', flag: 'iq', text: 'Iraq' },\n  { key: 'IE', value: 'IE', flag: 'ie', text: 'Ireland' },\n  { key: 'IL', value: 'IL', flag: 'il', text: 'Israel' },\n  { key: 'IT', value: 'IT', flag: 'it', text: 'Italy' },\n  { key: 'JM', value: 'JM', flag: 'jm', text: 'Jamaica' },\n  { key: 'JP', value: 'JP', flag: 'jp', text: 'Japan' },\n  { key: 'JO', value: 'JO', flag: 'jo', text: 'Jordan' },\n  { key: 'KZ', value: 'KZ', flag: 'kz', text: 'Kazakhstan' },\n  { key: 'KE', value: 'KE', flag: 'ke', text: 'Kenya' },\n  { key: 'KI', value: 'KI', flag: 'ki', text: 'Kiribati' },\n  { key: 'KW', value: 'KW', flag: 'kw', text: 'Kuwait' },\n  { key: 'KG', value: 'KG', flag: 'kg', text: 'Kyrgyzstan' },\n  { key: 'LA', value: 'LA', flag: 'la', text: 'Laos' },\n  { key: 'LV', value: 'LV', flag: 'lv', text: 'Latvia' },\n  { key: 'LB', value: 'LB', flag: 'lb', text: 'Lebanon' },\n  { key: 'LS', value: 'LS', flag: 'ls', text: 'Lesotho' },\n  { key: 'LR', value: 'LR', flag: 'lr', text: 'Liberia' },\n  { key: 'LY', value: 'LY', flag: 'ly', text: 'Libya' },\n  { key: 'LI', value: 'LI', flag: 'li', text: 'Liechtenstein' },\n  { key: 'LT', value: 'LT', flag: 'lt', text: 'Lithuania' },\n  { key: 'LU', value: 'LU', flag: 'lu', text: 'Luxembourg' },\n  { key: 'MO', value: 'MO', flag: 'mo', text: 'Macau' },\n  { key: 'MK', value: 'MK', flag: 'mk', text: 'Macedonia' },\n  { key: 'MG', value: 'MG', flag: 'mg', text: 'Madagascar' },\n  { key: 'MW', value: 'MW', flag: 'mw', text: 'Malawi' },\n  { key: 'MY', value: 'MY', flag: 'my', text: 'Malaysia' },\n  { key: 'MV', value: 'MV', flag: 'mv', text: 'Maldives' },\n  { key: 'ML', value: 'ML', flag: 'ml', text: 'Mali' },\n  { key: 'MT', value: 'MT', flag: 'mt', text: 'Malta' },\n  { key: 'MH', value: 'MH', flag: 'mh', text: 'Marshall Islands' },\n  { key: 'MQ', value: 'MQ', flag: 'mq', text: 'Martinique' },\n  { key: 'MR', value: 'MR', flag: 'mr', text: 'Mauritania' },\n  { key: 'MU', value: 'MU', flag: 'mu', text: 'Mauritius' },\n  { key: 'YT', value: 'YT', flag: 'yt', text: 'Mayotte' },\n  { key: 'MX', value: 'MX', flag: 'mx', text: 'Mexico' },\n  { key: 'FM', value: 'FM', flag: 'fm', text: 'Micronesia' },\n  { key: 'MD', value: 'MD', flag: 'md', text: 'Moldova' },\n  { key: 'MC', value: 'MC', flag: 'mc', text: 'Monaco' },\n  { key: 'MN', value: 'MN', flag: 'mn', text: 'Mongolia' },\n  { key: 'ME', value: 'ME', flag: 'me', text: 'Montenegro' },\n  { key: 'MS', value: 'MS', flag: 'ms', text: 'Montserrat' },\n  { key: 'MA', value: 'MA', flag: 'ma', text: 'Morocco' },\n  { key: 'MZ', value: 'MZ', flag: 'mz', text: 'Mozambique' },\n  { key: 'NA', value: 'NA', flag: 'na', text: 'Namibia' },\n  { key: 'NR', value: 'NR', flag: 'nr', text: 'Nauru' },\n  { key: 'NP', value: 'NP', flag: 'np', text: 'Nepal' },\n  { key: 'AN', value: 'AN', flag: 'an', text: 'Netherlands Antilles' },\n  { key: 'NL', value: 'NL', flag: 'nl', text: 'Netherlands' },\n  { key: 'NC', value: 'NC', flag: 'nc', text: 'New Caledonia' },\n  { key: 'PG', value: 'PG', flag: 'pg', text: 'New Guinea' },\n  { key: 'NZ', value: 'NZ', flag: 'nz', text: 'New Zealand' },\n  { key: 'NI', value: 'NI', flag: 'ni', text: 'Nicaragua' },\n  { key: 'NE', value: 'NE', flag: 'ne', text: 'Niger' },\n  { key: 'NG', value: 'NG', flag: 'ng', text: 'Nigeria' },\n  { key: 'NU', value: 'NU', flag: 'nu', text: 'Niue' },\n  { key: 'NF', value: 'NF', flag: 'nf', text: 'Norfolk Island' },\n  { key: 'KP', value: 'KP', flag: 'kp', text: 'North Korea' },\n  { key: 'MP', value: 'MP', flag: 'mp', text: 'Northern Mariana Islands' },\n  { key: 'NO', value: 'NO', flag: 'no', text: 'Norway' },\n  { key: 'OM', value: 'OM', flag: 'om', text: 'Oman' },\n  { key: 'PK', value: 'PK', flag: 'pk', text: 'Pakistan' },\n  { key: 'PW', value: 'PW', flag: 'pw', text: 'Palau' },\n  { key: 'PS', value: 'PS', flag: 'ps', text: 'Palestine' },\n  { key: 'PA', value: 'PA', flag: 'pa', text: 'Panama' },\n  { key: 'PY', value: 'PY', flag: 'py', text: 'Paraguay' },\n  { key: 'PE', value: 'PE', flag: 'pe', text: 'Peru' },\n  { key: 'PH', value: 'PH', flag: 'ph', text: 'Philippines' },\n  { key: 'PN', value: 'PN', flag: 'pn', text: 'Pitcairn Islands' },\n  { key: 'PL', value: 'PL', flag: 'pl', text: 'Poland' },\n  { key: 'PT', value: 'PT', flag: 'pt', text: 'Portugal' },\n  { key: 'PR', value: 'PR', flag: 'pr', text: 'Puerto Rico' },\n  { key: 'QA', value: 'QA', flag: 'qa', text: 'Qatar' },\n  { key: 'RE', value: 'RE', flag: 're', text: 'Reunion' },\n  { key: 'RO', value: 'RO', flag: 'ro', text: 'Romania' },\n  { key: 'RU', value: 'RU', flag: 'ru', text: 'Russia' },\n  { key: 'RW', value: 'RW', flag: 'rw', text: 'Rwanda' },\n  { key: 'SH', value: 'SH', flag: 'sh', text: 'Saint Helena' },\n  { key: 'KN', value: 'KN', flag: 'kn', text: 'Saint Kitts and Nevis' },\n  { key: 'LC', value: 'LC', flag: 'lc', text: 'Saint Lucia' },\n  { key: 'PM', value: 'PM', flag: 'pm', text: 'Saint Pierre' },\n  { key: 'VC', value: 'VC', flag: 'vc', text: 'Saint Vincent' },\n  { key: 'WS', value: 'WS', flag: 'ws', text: 'Samoa' },\n  { key: 'SM', value: 'SM', flag: 'sm', text: 'San Marino' },\n  { key: 'GS', value: 'GS', flag: 'gs', text: 'Sandwich Islands' },\n  { key: 'ST', value: 'ST', flag: 'st', text: 'Sao Tome' },\n  { key: 'SA', value: 'SA', flag: 'sa', text: 'Saudi Arabia' },\n  { key: 'SN', value: 'SN', flag: 'sn', text: 'Senegal' },\n  { key: 'CS', value: 'CS', flag: 'cs', text: 'Serbia' },\n  { key: 'RS', value: 'RS', flag: 'rs', text: 'Serbia' },\n  { key: 'SC', value: 'SC', flag: 'sc', text: 'Seychelles' },\n  { key: 'SL', value: 'SL', flag: 'sl', text: 'Sierra Leone' },\n  { key: 'SG', value: 'SG', flag: 'sg', text: 'Singapore' },\n  { key: 'SK', value: 'SK', flag: 'sk', text: 'Slovakia' },\n  { key: 'SI', value: 'SI', flag: 'si', text: 'Slovenia' },\n  { key: 'SB', value: 'SB', flag: 'sb', text: 'Solomon Islands' },\n  { key: 'SO', value: 'SO', flag: 'so', text: 'Somalia' },\n  { key: 'ZA', value: 'ZA', flag: 'za', text: 'South Africa' },\n  { key: 'KR', value: 'KR', flag: 'kr', text: 'South Korea' },\n  { key: 'ES', value: 'ES', flag: 'es', text: 'Spain' },\n  { key: 'LK', value: 'LK', flag: 'lk', text: 'Sri Lanka' },\n  { key: 'SD', value: 'SD', flag: 'sd', text: 'Sudan' },\n  { key: 'SR', value: 'SR', flag: 'sr', text: 'Suriname' },\n  { key: 'SJ', value: 'SJ', flag: 'sj', text: 'Svalbard' },\n  { key: 'SZ', value: 'SZ', flag: 'sz', text: 'Swaziland' },\n  { key: 'SE', value: 'SE', flag: 'se', text: 'Sweden' },\n  { key: 'CH', value: 'CH', flag: 'ch', text: 'Switzerland' },\n  { key: 'SY', value: 'SY', flag: 'sy', text: 'Syria' },\n  { key: 'TW', value: 'TW', flag: 'tw', text: 'Taiwan' },\n  { key: 'TJ', value: 'TJ', flag: 'tj', text: 'Tajikistan' },\n  { key: 'TZ', value: 'TZ', flag: 'tz', text: 'Tanzania' },\n  { key: 'TH', value: 'TH', flag: 'th', text: 'Thailand' },\n  { key: 'TL', value: 'TL', flag: 'tl', text: 'Timorleste' },\n  { key: 'TG', value: 'TG', flag: 'tg', text: 'Togo' },\n  { key: 'TK', value: 'TK', flag: 'tk', text: 'Tokelau' },\n  { key: 'TO', value: 'TO', flag: 'to', text: 'Tonga' },\n  { key: 'TT', value: 'TT', flag: 'tt', text: 'Trinidad' },\n  { key: 'TN', value: 'TN', flag: 'tn', text: 'Tunisia' },\n  { key: 'TR', value: 'TR', flag: 'tr', text: 'Turkey' },\n  { key: 'TM', value: 'TM', flag: 'tm', text: 'Turkmenistan' },\n  { key: 'TV', value: 'TV', flag: 'tv', text: 'Tuvalu' },\n  { key: 'UG', value: 'UG', flag: 'ug', text: 'Uganda' },\n  { key: 'UA', value: 'UA', flag: 'ua', text: 'Ukraine' },\n  { key: 'AE', value: 'AE', flag: 'ae', text: 'United Arab Emirates' },\n  { key: 'US', value: 'US', flag: 'us', text: 'United States' },\n  { key: 'UY', value: 'UY', flag: 'uy', text: 'Uruguay' },\n  { key: 'UM', value: 'UM', flag: 'um', text: 'Us Minor Islands' },\n  { key: 'VI', value: 'VI', flag: 'vi', text: 'Us Virgin Islands' },\n  { key: 'UZ', value: 'UZ', flag: 'uz', text: 'Uzbekistan' },\n  { key: 'VU', value: 'VU', flag: 'vu', text: 'Vanuatu' },\n  { key: 'VA', value: 'VA', flag: 'va', text: 'Vatican City' },\n  { key: 'VE', value: 'VE', flag: 've', text: 'Venezuela' },\n  { key: 'VN', value: 'VN', flag: 'vn', text: 'Vietnam' },\n  { key: 'WF', value: 'WF', flag: 'wf', text: 'Wallis and Futuna' },\n  { key: 'EH', value: 'EH', flag: 'eh', text: 'Western Sahara' },\n  { key: 'YE', value: 'YE', flag: 'ye', text: 'Yemen' },\n  { key: 'ZM', value: 'ZM', flag: 'zm', text: 'Zambia' },\n  { key: 'ZW', value: 'ZW', flag: 'zw', text: 'Zimbabwe' }\n]\n","import type { ApiClass } from '../index'\nimport type { Country, CountryOption, ApplyForKycParams, KycApplyResponse, KycStatusResponse } from '../types';\nimport { KycStatus } from '../types';\nimport countryOptions from './countryOptions';\n\nexport async function fetchKycCountries (\n  this: ApiClass,\n  { chain }: { chain: string }\n): Promise<CountryOption[]> {\n  const url = `${this.constants.BLOKS_API}/${chain}/kyc?type=countries&chain=${chain}`\n  const { content: countries } = await this.get<{ content: Country[] }>(url)\n  const countriesById = countries.reduce((acc: { [key: string]: Country }, country: Country) => {\n    acc[country.id] = country\n    return acc\n  }, {})\n  return countryOptions.filter(countryOption => countriesById[countryOption.key])\n}\n\n\n/**\n * FAILED\n * UNSUBMITTED\n * PENDING\n * PASSED\n */\nexport async function checkUserKycStatus (\n  this: ApiClass,\n  { chain, actor, expectedTier }: { chain: string; actor: string; expectedTier: number; }\n): Promise<KycStatus> {\n  if (!chain || !actor || !expectedTier) {\n    throw new Error('Invalid parameters')\n  }\n\n  return new Promise(async (resolve, reject) => {\n    // Get all KYC records for user\n    const getStatus = async () => {\n      const [userInfo] = await this.rpc.isLightKYCVerified(actor)\n      if (userInfo && userInfo.isLightKYCVerified) {\n        return resolve(KycStatus.PASSED)\n      }\n\n      const url = `${this.constants.BLOKS_API}/${chain}/kyc?type=status&chain=${chain}&actor=${actor}`\n      const kyc: KycStatusResponse = await this.get(url)\n      if (!kyc || !kyc.length) {\n        return reject(new Error('Could not fetch KYC record'))\n      }\n  \n      // Find relevant KYC record\n      const matchedTier = kyc.find(({ tier }: { tier: string }) => tier === String(expectedTier))\n      if (!matchedTier) {\n        return reject(new Error('No kyc data matching tier found'))\n      }\n  \n      // Unwrap kyc data\n      const { status } = matchedTier\n      if (!matchedTier.status) {\n        return reject(new Error('KYC Status not found'))\n      }\n\n      if (status === KycStatus.PENDING) {\n        setTimeout(() => getStatus(), 1000 * 2)\n      } else {\n        return resolve(status)\n      }\n    }\n\n    getStatus()\n  })\n}\n\nexport async function applyForKyc (this: ApiClass, params: ApplyForKycParams): Promise<KycApplyResponse> {\n  const url = `${this.constants.BLOKS_API}/${params.chain}/kyc`\n  const data: KycApplyResponse = await this.post(url, {\n    type: 'apply',\n    ...params\n  })\n\n  if (data) {\n    return data\n  } else {\n    throw new Error('Could not apply for KYC')\n  }\n}","import * as z from 'zod'\n\nexport const chainInfoParser = z.object({\n    chainId: z.string(),\n    explorerUrl: z.string(),\n    explorerName: z.string(),\n    resourceTokenSymbol: z.string(),\n    resourceTokenContract: z.string(),\n    systemTokenSymbol: z.string(),\n    systemTokenContract: z.string(),\n    rpcEndpoints: z.array(z.string()),\n    actionsRpcEndpoints: z.array(z.string()),\n    hyperionEndpoints: z.array(z.string()),\n    lightEndpoints: z.array(z.string()),\n})","import type { IChainInfo, CreateAccountParams, KycIpInfo, LoginAccountParams, CreateOrLoginAccountResponse, AvailableFeatures } from '../types'\nimport type { ApiClass } from '../index'\nimport { LoginAccountParamsV3, ExchangeRates, WithdrawalFeeQuote, exchangeRatesParser, withdrawalFeeQuoteParser } from '@proton/wrap-constants'\nimport { chainInfoParser } from './parsers'\n\nexport async function getChainInfo (this: ApiClass) : Promise<IChainInfo | undefined> {\n    const url = this.constants.CHAIN === 'proton-test'\n        ? 'https://raw.githubusercontent.com/ProtonProtocol/chain-info/main/testnet.json'\n        : 'https://raw.githubusercontent.com/ProtonProtocol/chain-info/main/mainnet.json'\n    \n    try {\n        const data = await this.get(url, {})\n        return chainInfoParser.parse(data)\n    } catch (e) {\n        console.log(e)\n        return undefined\n    }\n}\n\nexport async function getTokenPrices (this: ApiClass) : Promise<ExchangeRates> {\n    const url = this.constants.METAL_PROTON_ENDPOINT + `/v1/chain/exchange-rates/info`\n    try {\n        const data = await this.get(url)\n        return exchangeRatesParser.parse(data)\n    } catch (e) {\n        throw new Error(`Could not fetch exchange rates`)\n    }\n}\n\nexport async function getWithdrawalFee (this: ApiClass, { currency, network }: { currency: string, network: string }) : Promise<WithdrawalFeeQuote | undefined> {\n    const url = this.constants.METAL_PROTON_ENDPOINT + `/v1/swaps/calculate-estimated-fee`\n    try {\n        const data = await this.post(url, { currency, network })\n        return withdrawalFeeQuoteParser.parse(data)\n    } catch (e) {\n        console.log(e)\n        return undefined\n    }\n}\n\nexport async function currentLocation (this: ApiClass): Promise<KycIpInfo> {\n    const url = this.constants.METAL_PROTON_ENDPOINT + `/v1/kyc/ip-info`\n    return await this.get(url)\n}\n\nexport async function getAvailableFeatures (this: ApiClass, account: string): Promise<AvailableFeatures> {\n    try {\n        const url = this.constants.METAL_PROTON_ENDPOINT + `/v2/kyc/by-chain-account/${account}/available-features`\n        const res = await this.get<AvailableFeatures>(url)\n        return res\n    } catch (e) {\n        console.log(e)\n        return {\n            fiat: \"FALSE\",\n            bridge: \"FALSE\",\n            swap: \"FALSE\",\n            loan: \"FALSE\",\n        }\n    }\n}\n\nexport async function createAccount (this: ApiClass, params: CreateAccountParams) {\n    const url = this.constants.METAL_PROTON_ENDPOINT + `/v2/users/create`\n\n    const data = await this.post<CreateOrLoginAccountResponse>(url, params)\n\n    return data\n}\n\nexport async function loginAccount (this: ApiClass, params: LoginAccountParams): Promise<CreateOrLoginAccountResponse> {\n    const url = this.constants.METAL_PROTON_ENDPOINT + `/v2/users/login`\n\n    const data = await this.post<CreateOrLoginAccountResponse>(url, params)\n\n    return data\n}\n\nexport async function loginAccountV3 (this: ApiClass, params: LoginAccountParamsV3): Promise<{ token: string }> {\n    const url = this.constants.METAL_PROTON_ENDPOINT + `/v3/users/login`\n    const data = await this.post<{ token: string }>(url, params)\n    return data\n}","import type { OtcQuoteBody, OtcQuoteResponse, OtcOrderResponse } from '@proton/wrap-constants'\nimport type { ApiClass } from '../index'\n\nexport async function otcQuote (this: ApiClass, body: OtcQuoteBody) {\n    const url = this.constants.SWAP_URL + `/v1/quote/${body.baseSymbol}/${body.baseAmount}/${body.quoteSymbol}`\n    return await this.get<OtcQuoteResponse>(url)\n}\n\nexport async function otcOrder (this: ApiClass, id: string): Promise<OtcOrderResponse> {\n    const url = this.constants.SWAP_URL + `/v1/order/${id}`\n    return await this.get<OtcOrderResponse>(url)\n}","import type { GenerateAddressBody, GenerateAddressResponse, WithdrawBody, WithdrawMetalResponse, WithdrawHistoryMetalResponse } from '@proton/wrap-constants'\nimport type { ApiClass } from '../index'\n\nexport async function generateAddress (this: ApiClass, body: GenerateAddressBody){\n    const url = this.constants.WRAP_SERVER_URL + '/address/generate'\n    return await this.post<GenerateAddressResponse>(url, body)\n}\n\nexport async function deleteAddress (this: ApiClass, body: GenerateAddressBody): Promise<boolean> {\n    const url = this.constants.WRAP_SERVER_URL + '/address/delete'\n    return await this.post<boolean>(url, body)\n}\n\nexport async function withdrawMetal (this: ApiClass, body: WithdrawBody) {\n    const url = this.constants.WRAP_SERVER_URL + '/withdraw'\n    return await this.post<WithdrawMetalResponse>(url, body)\n}\n\nexport async function withdrawalHistoryMetal (this: ApiClass, account: string) {\n    const url = this.constants.WRAP_SERVER_URL + `/withdrawals/${account}`\n    return await this.get<WithdrawHistoryMetalResponse>(url)\n}\n\n","import type { ApiClass, OracleRow } from '../index'\nimport { encodeName } from '@bloks/utils'\nimport { RpcInterfaces } from '@proton/js'\n\nexport async function getXprTotalStakedAndApr (this: ApiClass) {\n  try {\n    const [\n      { supply },\n      { totalrstaked: totalStakedUnparsed },\n      {\n        continuous_rate,\n        inflation_pay_factor,\n        votepay_factor\n      }\n    ] = await Promise.all([\n      this.getTokenSupply(this.constants.EOSIO_TOKEN, this.constants.CORE_SYMBOL),\n      this.rpc.get_table_rows({\n        code: this.constants.EOSIO,\n        scope: this.constants.EOSIO,\n        table: 'globalsd',\n        limit: 1\n      }).then((res: any) => res.rows[0]),\n      this.rpc.get_table_rows({\n        code: this.constants.EOSIO,\n        scope: this.constants.EOSIO,\n        table: 'global4',\n        limit: 1\n      }).then((res: any) => res.rows[0]),\n    ])\n\n    const additionalInflation = +continuous_rate * supply\n    const new_tokens = additionalInflation\n    const to_yieldfarms = new_tokens / 4\n    const bpandsavings = new_tokens - to_yieldfarms\n\n    const to_producers = bpandsavings * (10000 / inflation_pay_factor)\n    const to_producers_block = to_producers * (10000 / votepay_factor)\n    const to_producers_vote = to_producers - to_producers_block\n\n    const savings = bpandsavings - to_producers\n    const to_savings = 2 * savings / 3\n    const to_consortium = savings - to_savings\n\n    const totalStaked = +totalStakedUnparsed / Math.pow(10, this.constants.CORE_PRECISION)\n    const apr = (to_savings / totalStaked) * 100\n\n    return {\n      supply,\n      yieldFarming: to_yieldfarms,\n      producers: to_producers,\n      producersBlock: to_producers_block,\n      producersVote: to_producers_vote,\n      consortium: to_consortium,\n      staking: to_savings,\n      totalStaked,\n      apr\n    }\n  } catch (e) {\n    console.log(e)\n    return 0\n  }\n}\n\nexport async function getXprVoter (this: ApiClass, account: string): Promise<{\n  owner: string,\n  staked: number,\n  isqualified: boolean,\n  claimamount: number,\n  lastclaim: number,\n  startstake?: number,\n  startqualif?: number,\n} | undefined> {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: this.constants.EOSIO,\n      scope: this.constants.EOSIO,\n      lower_bound: encodeName(account, false),\n      table: 'votersxpr',\n      limit: 1\n    })\n    if (rows && rows.length && rows[0].owner === account) {\n      return rows[0]\n    } else {\n      return undefined\n    }\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport async function getXprAccountStakes (this: ApiClass, account: string): Promise<{\n  from: string,\n  to: string,\n  quantity: string\n}[]> {\n  let stakes = []\n\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: this.constants.EOSIO,\n      scope: encodeName(account, false),\n      table: 'delxpr',\n      limit: -1\n    })\n    if (rows && rows.length) {\n      stakes = rows\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return stakes\n}\n\nexport async function getXprAccountRefund (this: ApiClass, account: string): Promise<{\n  owner: string,\n  request_time: string,\n  quantity: number\n} | undefined> {\n  let refund\n\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: this.constants.EOSIO,\n      scope: encodeName(account, false),\n      table: 'refundsxpr',\n      limit: -1\n    })\n    if (rows && rows.length) {\n      refund = rows[0]\n      refund.quantity = +refund.quantity.split(' ')[0]\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return refund\n}\n\nexport async function getXprOracleData (this: ApiClass, oracleIndex: number): Promise<any> {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: 'oracles',\n      scope: 'oracles',\n      table: 'data',\n      limit: 1,\n      lower_bound: oracleIndex,\n      upper_bound: oracleIndex\n    })\n    if (rows && rows.length) {\n      return rows[0]\n    } else {\n      return undefined\n    }\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport async function getAllOracleFeeds (this: ApiClass, lower_bound: any = undefined) {\n  try {\n    const { rows, more, next_key } = await this.rpc.get_table_rows({\n      code: 'oracles',\n      scope: 'oracles',\n      table: 'feeds',\n      limit: -1,\n      lower_bound\n    })\n    if (more) {\n      const restOfRows: any = await this.getAllOracleFeeds(next_key)\n      return rows.concat(restOfRows)\n    } else {\n      return rows\n    }\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function getSpecificOracleData (this: ApiClass, feed_index: number): Promise<OracleRow | undefined> {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: 'oracles',\n      scope: 'oracles',\n      table: 'data',\n      limit: -1,\n      lower_bound: feed_index,\n      upper_bound: feed_index\n    })\n\n    if (rows && rows.length && rows[0].feed_index === feed_index) {\n      return rows[0]\n    } \n  } catch (e) {\n    console.log(e)\n  }\n\n  return undefined\n}\n\n// pub\nexport async function getAllOracleData (this: ApiClass, lower_bound?: any): Promise<OracleRow[]> {\n  try {\n    let { rows, more, next_key } = await this.rpc.get_table_rows({\n      code: 'oracles',\n      scope: 'oracles',\n      table: 'data',\n      limit: -1,\n      lower_bound: lower_bound\n    })\n\n    if (more) {\n      rows = rows.concat(await this.getAllOracleData(next_key))\n    }\n\n    return rows\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\nexport async function getProtonAvatars (this: ApiClass, account: string, limit: number = 10): Promise<RpcInterfaces.UserInfo[]> {\n  if (this.constants.CHAIN.indexOf('proton') !== -1) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        json: true,\n        code: 'eosio.proton',\n        scope: 'eosio.proton',\n        table: 'usersinfo',\n        table_key: '',\n        key_type: 'i64',\n        lower_bound: encodeName(account, false),\n        index_position: 1,\n        limit: limit\n      })\n  \n      return result.rows\n    } catch (e) {\n      console.log('getProtonAvatar error', e)\n    }\n  }\n\n  return []\n}\n\nexport async function getProtonAvatar (this: ApiClass, account: string): Promise<RpcInterfaces.UserInfo | undefined> {\n  if (this.constants.CHAIN.indexOf('proton') !== -1) {\n    try {\n      const result = await this.rpc.get_table_rows({\n        json: true,\n        code: 'eosio.proton',\n        scope: 'eosio.proton',\n        table: 'usersinfo',\n        table_key: '',\n        key_type: 'i64',\n        lower_bound: encodeName(account, false),\n        index_position: 1,\n        limit: 1\n      })\n  \n      return result.rows.length > 0 && result.rows[0].acc === account\n        ? result.rows[0]\n        : undefined\n    } catch (e) {\n      console.log('getProtonAvatar error', e)\n    }\n  }\n\n  return undefined\n}\n","import { encodeName } from '@bloks/utils'\nimport { BigNumber as BN } from 'bignumber.js'\nimport type { DelegatedBandwidth, RowsResponse } from './types'\nimport type{ ApiClass } from './index'\n\nexport async function getRentbwState (this: ApiClass) {\n  const { rows } = await this.rpc.get_table_rows({\n    code: this.constants.EOSIO,\n    scope: 0,\n    table: 'powup.state',\n    limit: 1\n  })\n\n  return rows[0]\n}\n\nexport async function delegatedBandwidth (this: ApiClass, account: string, lower_bound: string): Promise<RowsResponse<DelegatedBandwidth>> {\n  return this.rpc.get_table_rows({\n    json: true,\n    code: this.constants.EOSIO,\n    scope: encodeName(account, false),\n    table: 'delband',\n    table_key: '',\n    limit: -1,\n    lower_bound: lower_bound,\n    key_type: 'i64',\n    index_position: 1\n  })\n}\n\nexport async function getAccountDelegatedBandwidth (this: ApiClass, account: string) {\n  let more = true\n  let rows: DelegatedBandwidth[] = []\n  let result = null\n  let lower_bound: string = ''\n\n  try {\n    do {\n      result = await this.delegatedBandwidth(account, lower_bound)\n      more = result.more\n      rows = rows.concat(result.rows)\n      if (more) {\n        lower_bound = new BN(\n          encodeName(rows[rows.length - 1].to, false)\n        )\n        .plus(1)\n        .toString()\n      }\n    } while (more)\n  } catch (e) {\n    console.log(e)\n  }\n\n  return rows\n}\n\nexport async function getAccountResources (this: ApiClass, account: string) {\n  const { rows } = await this.rpc.get_table_rows({\n    json: true,\n    code: this.constants.EOSIO,\n    scope: encodeName(account, false),\n    table: 'userres',\n    table_key: '',\n    limit: 1\n  })\n  return rows[0]\n}\n\nexport async function getRamPriceInEos (this: ApiClass) {\n  try {\n    const ram = await this.rpc.get_table_rows({\n      json: true,\n      code: this.constants.EOSIO,\n      scope: this.constants.EOSIO,\n      table: 'rammarket',\n      table_key: '',\n      limit: 10\n    })\n    // Amount of RAM bytes in use\n    const baseString = ram.rows[0].base.balance\n    const base: number = +(baseString.substr(0, baseString.indexOf(' ')))\n\n    // Amount of EOS in the RAM collector\n    const quoteString = ram.rows[0].quote.balance\n    const quote: number = quoteString.substr(0, quoteString.indexOf(' '))\n\n    // Price in kb\n    const price = quote / base\n    let ramPriceEos = Number(price.toFixed(8)) * 1024\n    return ramPriceEos\n  } catch (e) {\n    console.log(e)\n  }\n  return 0\n}","import { encodeName } from '@bloks/utils'\nimport type { ApiClass } from './index'\n\nexport async function getEosTopStakes (this: ApiClass, limit = 500) {\n  return this.lightApi.get_topstake(limit)\n}\n\nexport async function getEosTopRams (this: ApiClass, limit = 500) {\n  return this.lightApi.get_topram(limit)\n}\n\nexport async function getCurrentNameBids (this: ApiClass, lower_bound = '', upper_bound = '') {\n  let { rows, more, next_key } = await this.rpc.get_table_rows({\n    code: this.constants.EOSIO,\n    scope: this.constants.EOSIO,\n    table: 'namebids',\n    key_type: 'i64',\n    lower_bound: lower_bound && lower_bound.length <= 12 ? encodeName(lower_bound, true) : lower_bound,\n    upper_bound: upper_bound && upper_bound.length <= 12 ? encodeName(upper_bound, true) : upper_bound,\n    index_position: 1,\n    limit: -1\n  })\n\n  if (more) {\n    rows = rows.concat(await this.getCurrentNameBids(next_key, upper_bound))\n  }\n\n  return rows\n}\n","import { ApiClass, RexBal, RexPool, RexPoolRaw, RowsResponse } from './index'\nimport { encodeName } from '@bloks/utils'\nimport { multiply, divide, formatDate, utcTime, time, startDate } from '@bloks/numbers'\n\nconst chainToRexMap: { [name: string]: string } = {\n  jungle: 'jungle',\n  bos: 'bos',\n  eos: 'mainnet',\n  telos: 'telos'\n}\n\nexport async function getRexQueued (this: ApiClass, account: string) {\n  try {\n    const { rows } = await this.rpc.get_table_rows({\n      code: this.constants.EOSIO,\n      scope: this.constants.EOSIO,\n      table: 'rexqueue',\n      limit: 1,\n      lower_bound: encodeName(account, false)\n    })\n\n    if (rows && rows.length && rows[0].owner === account) {\n      return rows[0]\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return undefined\n}\n\nexport async function getRexPool (this: ApiClass): Promise<RexPool> {\n  const { rows }: RowsResponse<RexPoolRaw> = await this.rpc.get_table_rows({\n    code: this.constants.EOSIO,\n    scope: this.constants.EOSIO,\n    table: 'rexpool'\n  })\n\n  const pool = rows[0]\n\n  const assetToNumber = (asset: string) => Number(asset.split(' ')[0])\n\n  const total_lent = assetToNumber(pool.total_lent)\n  const total_lendable = assetToNumber(pool.total_lendable)\n  const total_unlent = assetToNumber(pool.total_unlent)\n  const total_rex = assetToNumber(pool.total_rex)\n  const total_rent = assetToNumber(pool.total_rent)\n  const lent_percent = multiply(divide(total_lent, total_lendable), 100)\n  const rex_price = +divide(total_lendable, total_rex)\n  const resource_price = +divide(total_unlent, (total_rent + 1))\n\n  return {\n    version: pool.version,\n    namebid_proceeds: assetToNumber(pool.namebid_proceeds),\n    loan_num: pool.loan_num,\n\n    total_lent,\n    total_unlent,\n    total_rent,\n    total_lendable,\n    total_rex,\n    lent_percent,\n    rex_price,\n    resource_price\n  }\n}\n\nexport async function getRexBalance (this: ApiClass, account: string): Promise<RexBal | undefined> {\n  const { rows }: RowsResponse<RexBal> = await this.rpc.get_table_rows({\n    code: this.constants.EOSIO,\n    scope: this.constants.EOSIO,\n    table: 'rexbal',\n    lower_bound: encodeName(account, false)\n  })\n\n  const bal = rows[0]\n\n  return bal.owner === account\n    ? bal\n    : undefined\n}\n\nexport async function getRexCpuLoans (this: ApiClass, account: string) {\n  const { rows } = await this.rpc.get_table_rows({\n    json: true,\n    code: this.constants.EOSIO,\n    scope: this.constants.EOSIO,\n    table: 'cpuloan',\n    table_key: 'byowner',\n    key_type: 'i64',\n    limit: 100,\n    lower_bound: encodeName(account, false),\n    index_position: 3\n  })\n\n  return rows.filter((row: any) => row.from === account)\n}\n\nexport async function getRexNetLoans (this: ApiClass, account: string) {\n  const { rows } = await this.rpc.get_table_rows({\n    json: true,\n    code: this.constants.EOSIO,\n    scope: this.constants.EOSIO,\n    table: 'netloan',\n    table_key: 'byowner',\n    key_type: 'i64',\n    limit: 100,\n    lower_bound: encodeName(account, false),\n    index_position: 3\n  })\n\n  return rows.filter((row: any) => row.from === account)\n}\n\nexport async function getEosDepositedIntoRex (this: ApiClass, account: string) {\n  const { rows } = await this.rpc.get_table_rows({\n    code: this.constants.EOSIO,\n    scope: this.constants.EOSIO,\n    table: 'rexfund',\n    lower_bound: encodeName(account, false)\n  })\n\n  const row = rows[0]\n\n  return row.owner === account\n    ? Number(row.balance.split(' ')[0])\n    : 0\n}\n\nexport async function getRexReturnRate (this: ApiClass, type = 'mpr') {\n  const chain = chainToRexMap[this.constants.CHAIN]\n  if (chain) {\n    const { data } = await this.post<{ data: any }>('https://www.api.bloks.io/graphql/v1alpha1/graphql', {\n      query: `query {\n        ${chain}_${type} {\n          ${type}\n        }\n      }`,\n      variables: null\n    })\n\n    if (data) {\n      return Math.abs(data[`${chain}_${type}`][0][type])\n    } else {\n      return 0\n    }\n  } else {\n    return 0\n  }\n}\n\nexport async function getRexPriceChart (this: ApiClass) {\n  const chain = chainToRexMap[this.constants.CHAIN]\n\n  if (chain) {\n    const current_time = formatDate(utcTime())\n    const seven_days_ago = formatDate(utcTime(startDate(time(), 7)))\n\n    const { data } = await this.post<{ data: any }>('https://www.api.bloks.io/graphql/v1alpha1/graphql', {\n      query: `query {\n        ${chain}_pricechart(args: {\n          from_time: \"${seven_days_ago}\",\n          to_time: \"${current_time}\"\n        }) {\n          t\n          o\n          h\n          l\n          c\n        }\n      }`,\n      variables: null\n    })\n\n    if (data) {\n      return data[`${chain}_pricechart`]\n    } else {\n      return []\n    }\n  } else {\n    return { actions: [] }\n  }\n}\n","import { ApiClass } from './index'\n\nexport async function getEosBalance (this: ApiClass, accountName: string) {\n  const [balance] = await this.rpc.get_currency_balance(this.constants.EOSIO_TOKEN, accountName, this.constants.CORE_SYMBOL)\n  return balance\n}\n\nexport async function getTokenBalance (this: ApiClass, contract: string, accountName: string, symbol: string) {\n  const result = await this.rpc.get_currency_balance(contract, accountName, symbol).catch((err: Error) => console.log(err))\n\n  if (result && result.length) {\n    return result[0]\n  } else {\n    return null\n  }\n}\n\n// Get Account Tokens\nexport async function getAccountTokens(this: ApiClass, accountName: string): Promise<{\n  currency: string;\n  amount: number;\n  contract: string;\n  decimals: number;\n}[]> {\n  let accountBalances: {\n    currency: string;\n    amount: number;\n    contract: string;\n    decimals: number;\n  }[] | undefined\n\n  // Stan's API\n  if (!accountBalances) {\n    accountBalances = await this.lightGetTokens(accountName)\n  }\n\n  // Hyperion\n  if (!accountBalances) {\n    accountBalances = await this.hyperionGetTokensForAccount(accountName)\n  }\n  \n  return accountBalances || []\n}\n\nexport async function lightGetTokens (this: ApiClass, account: string): Promise<{\n  currency: string;\n  amount: number;\n  contract: string;\n  decimals: number;\n}[] | undefined> {\n  try {\n    const { balances } = await this.lightApi.get_balances(account)\n  \n    return balances.map(balance => ({\n      currency: balance.currency,\n      amount: Number(balance.amount),\n      contract: balance.contract,\n      decimals: Number(balance.decimals),\n    }))\n  } catch (e) {\n    console.log('lightGetTokens error', e)\n    return undefined\n  }\n}\n\nexport async function hyperionGetTokensForAccount (this: ApiClass, account: string): Promise<{\n  currency: string;\n  amount: number;\n  contract: string;\n  decimals: number;\n}[] | undefined> {\n  try {\n    const { tokens } = await this.hyperion.get_tokens(account)\n    return tokens.map((token: any) => ({\n      currency: token.symbol,\n      amount: Number(token.amount),\n      contract: token.contract,\n      decimals: Number(token.precision),\n    }))\n  } catch (e) {\n    console.log('hyperionGetTokensForAccount error', e)\n    return undefined\n  }\n}\n\nexport async function getTokenSupply (this: ApiClass, contract: string, symbol: string) {\n  try {\n    const stats = await this.rpc.get_currency_stats(contract, symbol)\n    let { supply, max_supply } = stats[symbol]\n    return {\n      supply: supply ? +supply.split(' ')[0] : 0,\n      max_supply: max_supply ? +max_supply.split(' ')[0] : 0\n    }\n  } catch (e) {\n    console.log(e)\n    return {\n      supply: 0,\n      max_supply: 0\n    }\n  }\n}","import type { ApiClass } from './index'\nimport { JsonRpc, Serialize } from '@proton/js'\nimport { urlBuilder, historyTransformTransaction, historyTransformDeferredTransaction, hyperionTransformTransaction } from '@bloks/utils'\n\nexport async function getHistoryTransaction (this: ApiClass, txId: string, blockHint = 0) {\n  let eosTransactions = new JsonRpc(this.constants.TRANSACTIONS_ENDPOINTS)\n  let tx = await eosTransactions.history_get_transaction(txId, blockHint)\n  if (!tx) throw new Error('TX not found')\n\n  return historyTransformTransaction(tx)\n}\n\nexport async function getDeferredTransaction (this: ApiClass, txId: string) {\n  let { transactions } = await this.rpc.get_scheduled_transactions(true, txId, 1)\n\n  if (transactions.length > 0 && transactions[0].trx_id.substring(0, 6) === txId.substring(0, 6)) {\n    return historyTransformDeferredTransaction(transactions[0])\n  }\n\n  return {}\n}\n\nexport async function getHyperionTransaction (this: ApiClass, id: string) {\n  let result\n  if (this.constants.HYPERION_URL) {\n    result = await this.hyperion.get_transaction(id)\n  } else {\n    result = await this.get(\n      urlBuilder(this.constants.API_URL, 'hyperion', {\n        type: 'get_transaction',\n        id,\n        options: {}\n      })\n    ) as any\n  }\n\n  if (!result || !result.actions || !result.actions.length) throw new Error('TX not found')\n  return hyperionTransformTransaction(result)\n}\n\nexport async function generateTransactionSettings (this: ApiClass, expireSeconds = 3000, blocksBehind = 12, delaySec = 0) {\n  const info = await this.rpc.get_info()\n\n  let refBlock\n  let result = {}\n  if (info) {\n    refBlock = await this.rpc.get_block(info.head_block_num - blocksBehind)\n    result = Serialize.transactionHeader(refBlock, expireSeconds)\n  }\n\n  return {\n    max_net_usage_words: 0,\n    max_cpu_usage_ms: 0,\n    delay_sec: delaySec,\n    context_free_actions: [],\n    actions: [],\n    transaction_extensions: [],\n    ...result\n  }\n}","import { JsonRpc, Numeric, Key } from '@proton/js'\nimport { fioKeyToActor } from '@bloks/utils'\nimport type { ApiClass } from './index'\nimport { Authority } from './types'\n\nexport function getControlledAccounts (this: ApiClass, accountName: string) {\n  if (this.constants.HISTORY_TYPES.includes('native')) {\n    return this.actionsRpc.history_get_controlled_accounts(accountName)\n  } else if (this.constants.HISTORY_TYPES.includes('hyperion')) {\n    const actionsRpc = new JsonRpc([this.constants.HYPERION_URL])\n    return actionsRpc.history_get_controlled_accounts(accountName)\n  } else {\n    return []\n  }\n}\n\nexport async function getPermissionLinks(this: ApiClass, account: string) {\n  if (this.constants.LIGHT_API) {\n    try {\n      const lightAccount: any = await this.getAccountLightData(account)\n\n      if (lightAccount) {\n        return lightAccount.linkauth.map((auth: any) => ({\n          action: auth.type,\n          contract: auth.code,\n          permission_name: auth.requirement\n        }))\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  \n  if (this.constants.HISTORY_TYPES.includes('dfuse')) {\n    try {\n      const { linked_permissions }: {\n        linked_permissions: {\n          action: string,\n          contract: string,\n          permission_name: string\n        }[]\n      } = await this.get(`${this.constants.API_URL}/dfuse?type=state_permission_links&account=${account}`)\n\n      if (linked_permissions) {\n        return linked_permissions\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  \n  if (this.constants.HISTORY_TYPES.includes('hyperion')) {\n    try {\n      const { links } = await this.hyperion.get_links(account)\n      return links.map((link: { action: string, code: string, permission: string })  => ({\n        action: link.action,\n        contract: link.code,\n        permission_name: link.permission\n      }))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  console.log('Permission links not available on chain')\n  return []\n}\n\nexport async function dfuseGetKeyAccounts (this: ApiClass, key: string) {\n  try {\n    const { account_names }: { block_num: number, account_names: string[] } = await this.get(\n      `${this.constants.API_URL}/dfuse?type=state_key_accounts&publicKey=${key}`\n    )\n\n    return account_names && account_names.length\n      ? account_names\n      : []\n  } catch (e) {\n    console.log(e)\n    console.log('No dfuse accounts found associated with key:', key)\n    return []\n  }\n}\n\nexport async function nativeGetKeyAccounts (this: ApiClass, key: string) {\n  try {\n    let keyAccounts: string[] = []\n\n    if (['fio', 'fio-test'].includes(this.constants.CHAIN)) {\n      const fioAccount = fioKeyToActor(key.replace('EOS', 'FIO'), Numeric.stringToPublicKey)\n      if (keyAccounts.indexOf(fioAccount) === -1) {\n        keyAccounts.push(fioAccount)\n      }\n    } else {\n      const { accounts } = await this.rpc.get_accounts_by_authorizers([], [key])\n      keyAccounts = Array.from(new Set(accounts.map(account => account.account_name)))  \n    }\n\n    return keyAccounts\n  } catch (e) {\n    console.log(e)\n    throw e\n  }\n}\n\nexport async function hyperionGetKeyAccounts (this: ApiClass, key: string) {\n  if (!this.hyperion) {\n    throw new Error('Hyperion API not supported')\n  }\n\n  const legacyPublicKey = Key.PublicKey.fromString(key).toLegacyString()\n  const { account_names } = await this.hyperion.get_key_accounts(legacyPublicKey)\n\n  if (account_names && account_names.length) {\n    return account_names\n  } else {\n    throw new Error('No keys found')\n  }\n}\n\nexport async function lightGetKeyAccounts (this: ApiClass, key: string) {\n  if (!this.lightApi) {\n    throw new Error('Light API not supported')\n  }\n\n  const lightChain = this.constants.CHAIN.toLowerCase().replace('-', '')\n  const accountsByChain = await this.lightApi.get_key_accounts(key)\n  const { accounts } = accountsByChain[lightChain]\n\n  return Array.from(new Set(Object.keys(accounts)))\n}\n\nexport async function getKeyAccountsByType (this: ApiClass, key: string, type: string): Promise<string[]> {\n  switch (type) {\n    case 'dfuse':\n      return await this.dfuseGetKeyAccounts(key)\n    case 'native':\n      return await this.nativeGetKeyAccounts(key)\n    case 'hyperion':\n      return await this.hyperionGetKeyAccounts(key)\n    case 'light':\n    default:\n      return await this.lightGetKeyAccounts(key)\n  }\n}\n\n/**\n * Tries all histories to get keys.\n * @param {*} key\n */\nexport async function getKeyAccounts (this: ApiClass, key: string): Promise<string[]> {\n  if (key.startsWith('FIO')) {\n    key = key.replace('FIO', 'EOS')\n  }\n\n  for (const historyType of [this.constants.HISTORY_TYPES[0], 'light', ...this.constants.HISTORY_TYPES.slice(1)]) {\n    try {\n      const res = await this.getKeyAccountsByType(key, historyType)\n      if (res) {\n        return res\n      }\n    } catch (e) {\n      console.log(e)\n      continue;\n    }\n  }\n\n  return []\n}\n\nexport async function getKeyAccountsForAllChains (this: ApiClass, key: string): Promise<Array<{ chain: string, accounts: string[] }>> {\n  if (!this.lightApi) {\n    throw new Error('Light API not supported')\n  }\n\n  try {\n    const keyAccounts = await this.lightApi.get_all_key_accounts(key)\n    const combined = keyAccounts.reduce((acc: any, obj: any) => ({ ...acc, ...obj }), {})\n\n    return Object\n      .entries(combined)\n      .reduce((acc: any, [chain, { accounts: accountsByName }]: [string, any]) => {\n        const accounts = Object.keys(accountsByName)\n        if (accounts.length) {\n          acc.push({\n            chain,\n            accounts: accounts\n          })\n        }\n        return acc\n      }, [])\n  } catch (e) {\n    console.log(e)\n    return []\n  }\n}\n\n/**\n * Recursively resolves all required permissions\n * @param accountName\n * @param permission\n */\nexport async function getRequiredAccounts (\n  this: ApiClass,\n  accountName: string,\n  permissionName: string,\n  allPermissions: any = [],\n  currentLevel = 1,\n  maxLevel = 2\n) {\n  const accountInfo = await this.getAccount(accountName)\n\n  // For every permission (e.g. owner, active)\n  for (const permission of accountInfo!.permissions) {\n    // Filter down to perm (e.g. active)\n    if (permission.perm_name === permissionName) {\n      // Get all account (e.g. gyy, hartono, thompson)\n      let accounts: Authority[] = []\n\n      if (accountName === 'eosio' && ['owner', 'active'].includes(permission.perm_name)) {\n        const producers = await this.getProducersLocal()\n        accounts = producers.map(producer => ({ actor: producer.owner, permission: 'active' }))\n      }\n\n      if (!accounts.length) {\n        accounts = permission.required_auth.accounts.map(account => account.permission)\n      }\n\n      if (!accounts.length) {\n        allPermissions.push({ actor: accountName, permission: permissionName })\n      }\n\n      // For each account (e.g. hartono)\n      for (const account of accounts) {\n        // Check if can go deeper\n        if (currentLevel < maxLevel) {\n          await this.getRequiredAccounts(account.actor, account.permission, allPermissions, ++currentLevel, maxLevel)\n        } else {\n          allPermissions.push({ actor: account.actor, permission: account.permission })\n        }\n      }\n    }\n  }\n\n  return allPermissions\n}\n\nexport async function getUsersFromKeys (this: ApiClass, keys: string[]) {\n  let users: any = []\n\n  const promises = keys.map(async (key: string) => {\n    const account_names = await this.getKeyAccounts(key)\n\n    const promises2 = account_names.map(async (account: string) => {\n      const accountInfo = await this.getAccount(account)\n\n      // For every permission, add to array\n      for (const permission of accountInfo!.permissions) {\n        // If key exists\n        if (permission.required_auth.keys.find((permKey: any) => permKey.key === key)) {\n          users.push({\n            actor: account,\n            permission: permission.perm_name,\n            publicKey: key\n          })\n        }\n      }\n    })\n    await Promise.all(promises2)\n  })\n\n  await Promise.all(promises)\n\n  return users\n}","import { Api as ProtonApi, JsonRpc } from '@proton/js'\nimport { constants as TConstants } from '@bloks/constants'\nimport * as Hyperion from '@proton/hyperion'\nimport * as LightApi from '@proton/light-api'\n\nimport * as ACCOUNT from './account'\nimport * as ACTIONS from './actions'\nimport * as DSP from './dsp'\nimport * as FIO from './fio'\nimport * as MSIG from './msig'\nimport * as HTTP from './http'\nimport * as VOTE from './voting'\nimport * as PROTON from './proton'\nimport * as RESOURCES from './resources'\nimport * as STATS from './stats'\nimport * as REX from './rex'\nimport * as TOKEN from './token'\nimport * as TX from './transaction'\nimport * as KEYS from './keysAndPermissions'\n\nexport * from './types'\n\nexport class ApiClass {\n  rpc: JsonRpc = undefined as any\n  actionsRpc: JsonRpc = undefined as any\n  api: ProtonApi = undefined as any\n  hyperion: Hyperion.JsonRpc = undefined as any\n  lightApi: LightApi.JsonRpc = undefined as any\n  isInitialized: boolean = false\n  constants: typeof TConstants = undefined as any\n\n  constructor(chain?: string) {\n    if (chain) {\n      TConstants.initialize(chain);\n      this.initialize(TConstants)\n    }\n  }\n\n  initialize (constants: typeof TConstants, {\n    rpcEndpoints,\n    actionsRpcEndpoints,\n    lightEndpoint,\n    hyperionEndpoint\n  }: {\n    rpcEndpoints?: string[],\n    actionsRpcEndpoints?: string[],\n    lightEndpoint?: string,\n    hyperionEndpoint?: string\n  } = {}) {\n    this.constants = constants\n    this.rpc = new JsonRpc(rpcEndpoints || this.constants.DEFAULT_ENDPOINTS)\n    this.actionsRpc = new JsonRpc(actionsRpcEndpoints || this.constants.ACTIONS_ENDPOINTS)\n    this.api = new ProtonApi({ rpc: this.rpc })\n\n    const lightUrl = lightEndpoint || this.constants.LIGHT_API\n    if (lightUrl) {\n      this.lightApi = new LightApi.JsonRpc(this.constants.CHAIN.toLowerCase().replace('-', ''), { endpoint: lightUrl })\n    }\n\n    const hyperionUrl = hyperionEndpoint || this.constants.HYPERION_URL\n    if (hyperionUrl) {\n      this.hyperion = new Hyperion.JsonRpc(hyperionUrl)\n    }\n\n    this.isInitialized = true\n  }\n\n  public http                         = HTTP.http\n  public get                          = HTTP.get\n  public post                         = HTTP.post\n  \n  public getAccount                   = ACCOUNT.getAccount\n  public getGravatar                  = ACCOUNT.getGravatar\n  public searchAccount                = ACCOUNT.searchAccount\n  public getParent                    = ACCOUNT.getParent\n  public getAccountLightData          = ACCOUNT.getAccountLightData\n\n  public getActionsFromNative         = ACTIONS.getActionsFromNative\n  public getActions                   = ACTIONS.getActions\n  public getActionsFromDfuse          = ACTIONS.getActionsFromDfuse\n  public getActionsFromHyperion       = ACTIONS.getActionsFromHyperion\n\n  public getDappStats                 = DSP.getDappStats\n  public getDspPackages               = DSP.getDspPackages\n  public getDapphodlBalance           = DSP.getDapphodlBalance\n  public getDappBalance               = DSP.getDappBalance\n  public getDappStakes                = DSP.getDappStakes\n  public getDapphodlStakes            = DSP.getDapphodlStakes\n  public getDappUnstakes              = DSP.getDappUnstakes\n  public getDapphodlUnstakes          = DSP.getDapphodlUnstakes\n\n  public getFIOVoter                  = FIO.getFIOVoter\n  public getFIOPublicKey              = FIO.getFIOPublicKey\n  public getFIOAddressByName          = FIO.getFIOAddressByName\n  public getFIODomainByName           = FIO.getFIODomainByName\n  public getNFTsByFioAddress          = FIO.getNFTsByFioAddress\n  public getDomains                   = FIO.getDomains\n  public getAddresses                 = FIO.getAddresses\n  public getFIOProducers              = FIO.getFIOProducers\n  public getFIOSupplyBreakdown        = FIO.getFIOSupplyBreakdown\n  public getFIOFees                   = FIO.getFIOFees\n  public addFIOFeeToActions           = FIO.addFIOFeeToActions\n  public getFIOAddresses              = FIO.getFIOAddresses\n  public getFIODomains                = FIO.getFIODomains\n  public getFIOAddressesAndDomains    = FIO.getFIOAddressesAndDomains\n  public getFIOBalance                = FIO.getFIOBalance\n\n  public getControlledAccounts        = KEYS.getControlledAccounts\n  public getPermissionLinks           = KEYS.getPermissionLinks\n  public dfuseGetKeyAccounts          = KEYS.dfuseGetKeyAccounts\n  public nativeGetKeyAccounts         = KEYS.nativeGetKeyAccounts\n  public hyperionGetKeyAccounts       = KEYS.hyperionGetKeyAccounts\n  public lightGetKeyAccounts          = KEYS.lightGetKeyAccounts\n  public getKeyAccountsByType         = KEYS.getKeyAccountsByType\n  public getKeyAccounts               = KEYS.getKeyAccounts\n  public getKeyAccountsForAllChains   = KEYS.getKeyAccountsForAllChains\n  public getRequiredAccounts          = KEYS.getRequiredAccounts\n  public getUsersFromKeys             = KEYS.getUsersFromKeys\n\n  public getAllMsigs                  = MSIG.getAllMsigs\n  public parsePackedMsigActions       = MSIG.parsePackedMsigActions\n  public parsePackedMsig              = MSIG.parsePackedMsig\n  public getFullMsigProposal          = MSIG.getFullMsigProposal\n  public getMsigApprovals             = MSIG.getMsigApprovals\n  public getAccountsMsigProposals     = MSIG.getAccountsMsigProposals\n  public hyperionGetMsig              = MSIG.hyperionGetMsig\n  public getMsigProposal              = MSIG.getMsigProposal\n\n  public getRentbwState               = RESOURCES.getRentbwState\n  public delegatedBandwidth           = RESOURCES.delegatedBandwidth\n  public getAccountDelegatedBandwidth = RESOURCES.getAccountDelegatedBandwidth\n  public getAccountResources          = RESOURCES.getAccountResources\n  public getRamPriceInEos             = RESOURCES.getRamPriceInEos\n\n  public getRexQueued                 = REX.getRexQueued\n  public getRexPool                   = REX.getRexPool\n  public getRexBalance                = REX.getRexBalance\n  public getRexCpuLoans               = REX.getRexCpuLoans\n  public getRexNetLoans               = REX.getRexNetLoans\n  public getEosDepositedIntoRex       = REX.getEosDepositedIntoRex\n  public getRexReturnRate             = REX.getRexReturnRate\n  public getRexPriceChart             = REX.getRexPriceChart\n\n  public getEosTopStakes              = STATS.getEosTopStakes\n  public getEosTopRams                = STATS.getEosTopRams\n  public getCurrentNameBids           = STATS.getCurrentNameBids\n\n  public getEosBalance                = TOKEN.getEosBalance\n  public getTokenBalance              = TOKEN.getTokenBalance\n  public hyperionGetTokensForAccount  = TOKEN.hyperionGetTokensForAccount\n  public getTokenSupply               = TOKEN.getTokenSupply\n  public lightGetTokens               = TOKEN.lightGetTokens\n  public getAccountTokens             = TOKEN.getAccountTokens\n  \n  public getHistoryTransaction        = TX.getHistoryTransaction\n  public getDeferredTransaction       = TX.getDeferredTransaction\n  public getHyperionTransaction       = TX.getHyperionTransaction\n  public generateTransactionSettings  = TX.generateTransactionSettings\n\n  public getProxies                   = VOTE.getProxies\n  public getVoters                    = VOTE.getVoters\n  public calculateVoteWeight          = VOTE.calculateVoteWeight\n  public weightedVoteToNumber         = VOTE.weightedVoteToNumber\n  public getProxyData                 = VOTE.getProxyData\n  public getVoter                     = VOTE.getVoter\n  public getProducers                 = VOTE.getProducers\n  public getProducersLocal            = VOTE.getProducersLocal\n  public getChainTable                = VOTE.getChainTable\n\n  public fetchKycCountries            = PROTON.fetchKycCountries;\n  public checkUserKycStatus           = PROTON.checkUserKycStatus;\n  public applyForKyc                  = PROTON.applyForKyc;\n  public currentLocation              = PROTON.currentLocation;\n  public getAvailableFeatures         = PROTON.getAvailableFeatures;\n  public otcQuote                     = PROTON.otcQuote;\n  public otcOrder                     = PROTON.otcOrder;\n  public generateAddress              = PROTON.generateAddress;\n  public deleteAddress                = PROTON.deleteAddress;\n  public withdrawMetal                = PROTON.withdrawMetal;\n  public withdrawalHistoryMetal       = PROTON.withdrawalHistoryMetal;\n  public getTokenPrices               = PROTON.getTokenPrices;\n  public getWithdrawalFee             = PROTON.getWithdrawalFee;\n  public getChainInfo                 = PROTON.getChainInfo;\n  public createAccount                = PROTON.createAccount;\n  public loginAccount                 = PROTON.loginAccount;\n  public loginAccountV3               = PROTON.loginAccountV3;\n  public getXprTotalStakedAndApr      = PROTON.getXprTotalStakedAndApr\n  public getXprVoter                  = PROTON.getXprVoter\n  public getXprAccountStakes          = PROTON.getXprAccountStakes\n  public getXprAccountRefund          = PROTON.getXprAccountRefund\n  public getXprOracleData             = PROTON.getXprOracleData\n  public getAllOracleFeeds            = PROTON.getAllOracleFeeds\n  public getAllOracleData             = PROTON.getAllOracleData\n  public getSpecificOracleData        = PROTON.getSpecificOracleData\n  public getProtonAvatar              = PROTON.getProtonAvatar\n  public getProtonAvatars             = PROTON.getProtonAvatars\n}"],"names":["getAccount","accountName","rpc","get_account","account","permissions","map","permission","required_auth","keys","key","indexOf","constants","KEY_PREFIX","Numeric","convertLegacyPublicKey","console","log","undefined","searchAccount","query","limit","test","trim","toLowerCase","get_table_by_scope","json","code","EOSIO","lower_bound","table","upper_bound","length","repeat","rows","row","scope","getGravatar","CHAIN","get_table_rows","ACCOUNT_INFO","table_key","key_type","index_position","result","account_name","getParent","HISTORY_TYPES","includes","HYPERION_URL","hyperion","get_creator","get","urlBuilder","API_URL","type","getAccountLightData","lightApi","get_account_info","getActionsFromNative","actionSkip","actionsPerPage","historyType","actionsRpc","history_get_actions","Error","nativeTransformGetActions","getActions","sortDirection","dfuseCursorStack","tokenFilter","actionFilters","contractFilter","actionFilter","start","end","CHAIN_START_DATE","Date","toISOString","inputCursor","getActionsFromDfuse","cursor","direction","after","before","getActionsFromHyperion","skip","Math","abs","sort","q","split","tokenContract","tokenfilter","actionFiltersLocal","Object","entries","reduce","filters","value","isActive","concat","actionFiltersQuery","filter","dfuseQuery","join","search","options","assign","withReversible","dfuseTransformGetActions","params","replace","eachFilter","hyperionQuery","uniqueContracts","Array","from","Set","contract","get_actions","hyperionTransformGetActions","getDappStats","getDspPackages","getDapphodlBalance","getDappBalance","getDappStakes","getDapphodlStakes","more","id","getDappUnstakes","getDapphodlUnstakes","http","path","method","body","headers","fetch","response","data","ok","RpcError","post","JSON","stringify","getFIOPublicKey","encodeName","clientkey","getFIOVoter","getFIOAddressByName","name","string_to_uint128_hash","getNFTsByFioAddress","get_nfts_fio_address","nfts","getFIODomainByName","getDomains","reverse","getAddresses","getFIOProducers","getFIOBalance","fio_public_key","balance","getFIOSupplyBreakdown","tokenRes","supply","bpRewardRes","bpRewards","rewards","pow","CORE_PRECISION","bpBucketRes","bpBucket","totalBp","circulating","totalLocked","getFIOFees","then","_","addFIOFeeToActions","actions","actor","fioFeesMap","fees","modifiedActions","action","api","getCachedAbi","abi","abiActions","abiStructs","structs","relevantAction","find","abiAction","relevantStruct","abiStruct","maxFeeField","fields","field","max_fee","endpoint","relevantFee","fee","end_point","suf_amount","actorField","tpidField","tpid","FIO_FEES_ACCOUNT","addressField","fio_address","getFIOAddresses","addresses","push","BN","plus","toString","owner_account","getFIODomains","fio_domains","domain","fio_domain","getFIOAddressesAndDomains","DEFAULT_ENDPOINTS","getAllMsigs","EOSIO_MSIG","EOSIO_MSIG_PROPOSALS_TABLE","tables","a","b","block","highestBlock","count","fill","getMsigProposal","proposalName","proposal_name","parsePackedMsigActions","packedActions","deserializeActionsSync","trx","rawAbiToJson","hexToUint8Array","action_trace","act","parsePackedMsig","packed_transaction","deserializeTransactionWithActions","tx","getFullMsigProposal","getMsigApprovals","getAccountsMsigProposals","promises","EOSIO_MSIG_APPROVALS_TABLE","Promise","all","rows2","rows1","hyperionGetMsig","msigFilters","get_proposals","res","proposals","proposal","block_num","get_deltas","proposer","actionsRes","actionsRes2","executionTransaction","payer","executer","canceler","trx_id","published_at","timestamp","cancelled","deltas","transaction","approvals","getVoter","getProxies","ALOHA_PROXY_URL","proxies","get_voters","proxy","voters","voter","index","weight","rank","getVoters","producer","voteWeight","calculateVoteWeight","vote","weightedVoteToNumber","decayWeeks","timestamp_epoch","dates","now","floor","weightedVote","getProxyData","getProducersLocal","owner","getProducers","pageNum","perPage","local","getChainTable","KycStatus","flag","text","fetchKycCountries","chain","url","BLOKS_API","countries","content","countriesById","acc","country","countryOptions","countryOption","checkUserKycStatus","expectedTier","resolve","reject","getStatus","isLightKYCVerified","userInfo","PASSED","kyc","matchedTier","tier","String","status","PENDING","setTimeout","applyForKyc","chainInfoParser","z","chainId","explorerUrl","explorerName","resourceTokenSymbol","resourceTokenContract","systemTokenSymbol","systemTokenContract","rpcEndpoints","actionsRpcEndpoints","hyperionEndpoints","lightEndpoints","getChainInfo","parse","getTokenPrices","METAL_PROTON_ENDPOINT","exchangeRatesParser","getWithdrawalFee","currency","network","withdrawalFeeQuoteParser","currentLocation","getAvailableFeatures","fiat","bridge","swap","loan","createAccount","loginAccount","loginAccountV3","otcQuote","SWAP_URL","baseSymbol","baseAmount","quoteSymbol","otcOrder","generateAddress","WRAP_SERVER_URL","deleteAddress","withdrawMetal","withdrawalHistoryMetal","getXprTotalStakedAndApr","getTokenSupply","EOSIO_TOKEN","CORE_SYMBOL","totalStakedUnparsed","totalrstaked","continuous_rate","inflation_pay_factor","votepay_factor","additionalInflation","new_tokens","to_yieldfarms","bpandsavings","to_producers","to_producers_block","to_producers_vote","savings","to_savings","to_consortium","totalStaked","apr","yieldFarming","producers","producersBlock","producersVote","consortium","staking","getXprVoter","getXprAccountStakes","stakes","getXprAccountRefund","refund","quantity","getXprOracleData","oracleIndex","getAllOracleFeeds","next_key","restOfRows","getSpecificOracleData","feed_index","getAllOracleData","getProtonAvatars","getProtonAvatar","getRentbwState","delegatedBandwidth","getAccountDelegatedBandwidth","to","getAccountResources","getRamPriceInEos","ram","baseString","base","substr","quoteString","quote","price","ramPriceEos","Number","toFixed","getEosTopStakes","get_topstake","getEosTopRams","get_topram","getCurrentNameBids","chainToRexMap","jungle","bos","eos","telos","getRexQueued","getRexPool","pool","assetToNumber","asset","total_lent","total_lendable","total_unlent","total_rex","total_rent","lent_percent","multiply","divide","rex_price","resource_price","version","namebid_proceeds","loan_num","getRexBalance","bal","getRexCpuLoans","getRexNetLoans","getEosDepositedIntoRex","getRexReturnRate","variables","getRexPriceChart","current_time","formatDate","utcTime","seven_days_ago","startDate","time","getEosBalance","get_currency_balance","getTokenBalance","symbol","err","getAccountTokens","accountBalances","lightGetTokens","hyperionGetTokensForAccount","get_balances","balances","amount","decimals","get_tokens","tokens","token","precision","get_currency_stats","stats","max_supply","getHistoryTransaction","txId","blockHint","eosTransactions","JsonRpc","TRANSACTIONS_ENDPOINTS","history_get_transaction","historyTransformTransaction","getDeferredTransaction","get_scheduled_transactions","transactions","substring","historyTransformDeferredTransaction","getHyperionTransaction","get_transaction","hyperionTransformTransaction","generateTransactionSettings","expireSeconds","blocksBehind","delaySec","get_info","info","get_block","head_block_num","refBlock","Serialize","transactionHeader","max_net_usage_words","max_cpu_usage_ms","delay_sec","context_free_actions","transaction_extensions","getControlledAccounts","history_get_controlled_accounts","getPermissionLinks","LIGHT_API","lightAccount","linkauth","auth","permission_name","requirement","linked_permissions","get_links","links","link","dfuseGetKeyAccounts","account_names","nativeGetKeyAccounts","keyAccounts","fioAccount","fioKeyToActor","stringToPublicKey","get_accounts_by_authorizers","accounts","hyperionGetKeyAccounts","legacyPublicKey","Key","PublicKey","fromString","toLegacyString","get_key_accounts","lightGetKeyAccounts","lightChain","accountsByChain","getKeyAccountsByType","getKeyAccounts","startsWith","slice","getKeyAccountsForAllChains","get_all_key_accounts","combined","obj","accountsByName","getRequiredAccounts","permissionName","allPermissions","currentLevel","maxLevel","accountInfo","perm_name","getUsersFromKeys","users","promises2","permKey","publicKey","ApiClass","isInitialized","HTTP","ACCOUNT","ACTIONS","DSP","FIO","KEYS","MSIG","RESOURCES","REX","STATS","TOKEN","TX","VOTE","PROTON","TConstants","initialize","lightEndpoint","hyperionEndpoint","ACTIONS_ENDPOINTS","ProtonApi","lightUrl","LightApi","hyperionUrl","Hyperion"],"mappings":"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"}